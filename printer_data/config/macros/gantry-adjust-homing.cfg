#########################################################################################
# HOMING #
#########################################################################################
[homing_override]
axes: xyz
gcode:
  #INITIALIZE_TOOLCHANGER
  STOP_TOOL_PROBE_CRASH_DETECTION
  {% if printer.probe.last_query  %}
         RESPOND TYPE=echo MSG='Z Probe triggered, cannot home.'
  {% else %}
    SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

    {% if home_all %}
      G90 ; absolute mode
      G28 Z
      G0 Z20 F1000
    {% endif %}


    {% if home_all or 'Y' in params or 'X' in params %}
      G28 Y
    {% endif %}

    {% if home_all or 'X' in params %}
      G28 Y
      G28 X
      G91
      G0 X-10 Y-10 F10000
      G90
    {% endif %}

    {% if home_all or 'Z' in params %}
      {% set random_x = (range(-50, 50) | random) / 10 %}
      {% set random_y = (range(-50, 50) | random) / 10 %}

      G90 ; absolute mode
      G0 X{175.0+random_x} Y{175.0+random_y} F12000
      G28 Z
      _ADJUST_Z_HOME_FOR_TOOL_OFFSET
    {% endif %}
    _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
    M400
  {% endif %}



#########################################################################################
# QUAD GANTRY LEVELING # 
#########################################################################################
[quad_gantry_level]
gantry_corners:
   -70,-10
   410,420

points:
   30,80
   30,300
   310,300
   310,80

speed: 350
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.025
max_adjust: 10

#########################################################################################

[gcode_macro G32]
gcode:
    STATUS_LEVELING
    #_TAP_PROBE_ACTIVATE
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    #G28
    QUAD_GANTRY_LEVEL
    #G28
    #PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
    STATUS_READY



#########################################################################################
# BED MESHING # 
#########################################################################################


[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 10, 25
mesh_max: 340, 350
probe_count: 6, 6

#------------------------------------------------------------------------------------------

[exclude_object]

#------------------------------------------------------------------------------------------
# Bed mesh calibration including the tools z offset

[gcode_macro TOOL_BED_MESH_CALIBRATE]
gcode:
      #_TAP_PROBE_ACTIVATE
      {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
      G90 ; absolute mode
      G0 Z10 F1000
      # Bed mesh knows about the probe offset, but not about the tool offset.
      SET_KINEMATIC_POSITION Z={10.0-tool_z_offset|float}
      BED_MESH_CALIBRATE ADAPTIVE=1
      G0 Z10 F1000
      SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float}

      

#########################################################################################
# TOOLCHANGER SPECIFICS #
#########################################################################################

# Probing using tap always using right temp

[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 150 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}

#------------------------------------------------------------------------------------------

# Depending on the selected tool at the time of homing, the physical Z endstop position is offset.
# This corrects for that using current tool offset.

[gcode_macro _ADJUST_Z_HOME_FOR_TOOL_OFFSET]
gcode:
      G90 ; absolute mode
      G0 Z10 F1000
      {% set tool = printer.toolchanger.tool %}
      {% if tool %}
         {% set tool_z_offset = printer[tool].gcode_z_offset %}
         {% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset %}
         SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float+probe_z_offset|float} #SET_KINEMATIC_POSITION Z={10.0+probe_z_offset|float}
      {% endif %}


#------------------------------------------------------------------------------------------

[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
    # Apply gcode offsets for tools
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
      SET_GCODE_OFFSET X={printer[tool].gcode_x_offset} Y={printer[tool].gcode_y_offset} Z={printer[tool].gcode_z_offset}
    {% endif %}



#------------------------------------------------------------------------------------------






      