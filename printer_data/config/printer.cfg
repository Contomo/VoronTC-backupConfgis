#pragma once


# Blue Anthead    | 9422cd1b01cb
# White Anthead   | 76a9dd982630
# Yellow Yavoth   | 70b63482dbf8
# Orange Yavoth   | 868cbf9d7ccf
# Purple Anthead  | 2f4800498a26

[mcu] # Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_110020001847323037343634-if00
restart_method: command # make flash FLASH_DEVICE=d50:614e

[include toolheads/*.cfg]
#--------------------------------------------------------------------
[include vase_boron_hardware/*.cfg]

[include develop/*.cfg]
[include develop/**/*.cfg]
[include develop/**/**/*.cfg]

[include others/*.cfg]

[include ShakeTune/*.cfg]
[include ShakeTune/**/*.cfg]

# these would be required ig.
[include mainsail.cfg] # order matters! 'mainsail' should be over 'toolchanger'
[include user-macros/*.cfg]


[include toolchanger/includes.cfg]

# ------------------------------------------------------
# Belows are required defininitions to run.
[force_move]
enable_force_move: True

[input_shaper]
[exclude_object]
[respond]
[pause_resume]

# ------------------------------------------------------

[gcode_arcs]
resolution: 0.1

[printer]
#Recommended accel: 26787
#Recommended velocity: 926
kinematics: corexy
max_velocity: 2000 #2200  
max_accel: 12000     #10k        #Max 4000
max_z_velocity: 510     #350    #~540 danger zone for 52V #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 3100     #1k
square_corner_velocity: 5.0 # 5

[virtual_sdcard]
path: /home/contomo/printer_data/gcodes
on_error_gcode: CANCEL_PRINT_BASE

[auto_speed]

[idle_timeout]
timeout: 7200



#     ^[\s\S]*Making the following Z adjustments:[\s\S]*$

# mainsail filter regex for like... not frequently needed stuff
#    ^(?:[\s\S]*(?:Testing frequency\s+\d+\s*Hz|Probe made contact at\s*[-+]?\d+\.\d+,\s*[-+]?\d+\.\d+,\s*[-+]?\d+\.\d+|probe at\s*[-+]?\d+\.\d+,\s*[-+]?\d+\.\d+\s+is\s+z=[-+]?\d+\.\d+|stepper_z\d*\s*=\s*[-+]?\d+\.\d+|Average:\s*[\d.]+|Retries:\s*\d+/\d+\s*Probed points range:\s*[\d.]+\s*tolerance:\s*[\d.]+|Making the following Z adjustments:|Actuator Positions:|Gantry-relative probe points:)[\s\S]*)$

#───────────────────────────────────────────────────< SAVE VARIABLES >───────────────────────────────────────────────────
#  Change this path to somewhere in your config folder
[save_variables]
filename: ~/printer_data/config/toolchanger/variables.cfg



#───────────────────────────────────────────────────< INPUT SHAPER >───────────────────────────────────────────────────
# default fallback values in here
[input_shaper]
shaper_type_x = mzv
shaper_type_y = mzv
shaper_freq_x = 51.4
shaper_freq_y = 36.0
damping_ratio_x: 0.05
damping_ratio_y: 0.05

[resonance_tester]
max_smoothing: 0.12
accel_chip: adxl345 T0 # doesnt matter, just any. will select after in macros.
probe_points: 175, 175, 20 

#───────────────────────────────────────────────────< QUAD GANTRY LEVEL >───────────────────────────────────────────────────
[quad_gantry_level]
speed: 700
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.005 # 0.025
max_adjust: 15
gantry_corners:
    -65.77, 7.57
    404.88, 431.73
points:
   30,80
   30,300
   310,300
   310,80


#───────────────────────────────────────────────────< BED MESH SETTINGS >───────────────────────────────────────────────────
[bed_mesh]
speed: 500
horizontal_move_z: 1
mesh_min:          20, 40
mesh_max:          330, 350
probe_count:       6, 6

fade_start:        0.5
fade_end:          4
adaptive_margin:   10


[rounded_path]
resolution:         0.25
algorithm:          bezier
replace_g0:         False

#───────────────────────────────────────────────────< TOOLCHANGING SETTINGS >───────────────────────────────────────────────────
[toolchanger]
verify_tool_pickup: False
on_axis_not_homed: home # home|abort
initialize_on: manual   # manual|first-use|homing
uses_axis: xyz # just ensures that these axis are homed before toolchanges. for liftbar, maybe change this?
t_command_restore_axis: XYZ

params_safe_y: 150  # safe distance when changing (moving up and down) 
params_close_y: 25  # safe distance to tools without tool attatched
# (small note that technically, setting this to 0, should not cause a crash... technically)

# size of your tool, used for some calcs/obstacle avoidance/appraoches.
params_tool_size: { 'x': 60,
                    'y': 60,
                    'z': 90, } 

params_fast_speed: 32000
params_path_speed: 3200   

# ─── update your pickup paths based on the changer you have! default right now is SC
params_dropoff_path: [{'z': 3.5,  'y': 4, 'f': 3.0},
                      {'z': 2,    'y': 1, 'f': 2.0},
                      {'z': 1,    'y': 0, 'f': 1.0},
                      {'z': 0,    'y': 0, 'f': 0.8},
                      {'z': -12,  'y': 0, 'f': 3}]

params_pickup_path:  [{'z': -12,  'y': 2, 'f': 3.0},
                      {'z': -10,  'y': 0, 'f': 2.0},
                      {'z': -5,   'y': 0, 'f': 1.0},
                      {'z': 1,    'y': 0, 'f': 0.75, 'verify': 1},
                      {'z': 2,    'y': 2, 'f': 1.25},
                      {'z': 3,    'y': 5, 'f': 2}]
# (see the "PLOT_PATH" macro to visualize these /\ )

#rgb(30, 32, 73)
[gcode_macro _toolchanger_settings]

variable_color_scheme:                  { 'default':                "rgb(58, 158, 244)",
                                          'highlight':              "rgb(251, 226, 2)",
                                          'idk':                    "rgb(255, 82, 139)",
                                        }


#───────────────────────────────────────────────────< HOMING SETTINGS >───────────────────────────────────────────────────
variable_homing:                        { 'xy_move_safe_z_height'   : 10,
                                          'xy_home_retract_distance': 5,      # in mm, amount to retract from "corner" after each axis
                                          'z_home_xy_random'        : 10,
                                        }
# use this to quieten down moves during macros. 
# comment out to disable.
variable_macro_accel_divider:               4
#
# basic meaning, for z probing the tap probe will
# require heat. (calibration probe will always require heat regardless)
variable_use_tap_requires_temperature: False
#
#───────────────────────────────────────────────────< MISCELLANEOUS SETTINGS >───────────────────────────────────────────────────

# valid options are: Startup|Use|Always (comment the variable to disable)
variable_svf:                           { 'auto_repair'              :  'Always', 
                                          'remove_invalid'           :  True, # maybe change this to false if you tinker
                                          'max_offs'                 :  2.5,
                                        }

variable_clean_nozzle_macro:            { 'macro'                    :  'CLEAN_NOZZLE' }
#
variable_print_start:                   { 'prime_tools_at_start'     :  True, 
                                          'calibrate_tools_at_start' :  False,  # annoying
                                          'max_tools_heating_at_once':  2,      # how many are heated per batch (melty wires)
                                        }

#───────────────────────────────────────────────────< CHANGE/DROP FAILURE SETTINGS >───────────────────────────────────────────────────
variable_tc_failure:                    { 'speed_divider'            :  4,  
                                          'accel_divider'            :  8, # speed and accel division for handling failures.
                                        }


#───────────────────────────────────────────────────< OFFSET CALIBRATION SETTINGS >───────────────────────────────────────────────────
#
# do note that T0 represents your sensors location in this storage, its merely a representation of homing/sensor position.
# to read out stats call: 'TC_OFFSET_STATS'
variable_offset_history:                { 'max_entries'               : 50, 
                                          'rounding'                  : 5,
                                          'key'                       : 'offs_history_ball'
                                        }

variable_offset_calibration:            { 'nozzle_temperature'        : 170,
                                          'value_rounding'            : 4,     # rounding used when saving the gcode offsets
                                          'save_on_failure_delay'     : 120,   # automatically saves (if for some reason probing macro fails -> exceeds sample tolerance, trigger before move etc...)
                                          'probe_calibration'         : True,  # to run probe z trigger calibration with your calibration runs
                                          'probe_extra_params'        : 'SAMPLE_RETRACT_DIST=5',
                                        }

# very experimental! how do i describe this....?
# if more than that amount tools are calibrated at once,and all tools are fairly close in change (0.25, 0.26, 0.3, 0.28) for the probe offset,
# it is assumed that rather than all tool probes being off by that amount, the trigger to bottom Z of your probe is off by that amount.
# min_tools = min tools when this does its thing        ||| max_variation = in percent, between probe values
# MAD = median absolute deviation, filtering at mad_k × MAD ||| max_drift = max allowable adjustment range.
#variable_ttbz_drift_autoadjust:        {'min_tools': 3, 'weight_history': 0.3, 'max_drift': 0.4, 'mad_k': 0.3}
#
gcode:#dont delete

[tools_calibrate]
pin:                           ^PG11
spread:                        4 #5 #3 #7
lower_z:                       0.3 #0.4 #0.2 #0.5
travel_speed:                  500 #250 #100 #20
speed:                         15 #20 #15 #5 # 2.5 #1.5
lift_speed:                    50 #20 #4 #8
final_lift_z:                  4 #4 #6
sample_retract_dist:           3 #5
samples_tolerance:             0.075 #0.15 #0.05
samples_tolerance_retries:     20 #5 #3
samples:                       7 #8 #4  #3 #6 #5
samples_result:                median
#trigger_to_bottom_z:           1.7838 #1.7838 #2.0325 # 2.1325
# decrease if the nozzle is too high, increase if too low.

#todo do mode coarse for first run.
# Coarse-------------------
# lower_z: 0.7
# spread: 7
# samples: 4
# sample_retract_dist: 8
# final_lift_z: 8

#───────────────────────────────────────────────────< TOOL PROBE CRASH HANDLING >───────────────────────────────────────────────────
#todo wtf <- ???
[tool_probe_endstop]
crash_mintime: 0.1
crash_gcode:
    RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.' 
    RESPOND TYPE=error MSG='position on fail: {printer.gcode_move.position}' 
    #M84
    PAUSE_BASE
    #TURN_OFF_HEATERS
    G91
    G0 E-2
    G90
    _auto_continue_retry CHECK_INTERVAL=1 # interval how often to check if present now, an then auto continue.

[gcode_macro TOOL_PROBE_CRASH_RESUME] # will automatically run after detecting tool again.
gcode:
    RESPOND MSG='Tool probe crash recovered, continuing.'
    START_TOOL_PROBE_CRASH_DETECTION T={printer.toolchanger.tool_number}
    G91
    G0 E2
    G90
    RESUME_BASE


[virtual_sdcard]
on_error_gcode:
    TURN_OFF_HEATERS
    _MOVE_BACK_END_PAUSE_CANCEL


[gcode_macro T99]
description: allows you to adjust offsets.
gcode:
    ADJUST_TOOL_OFFSETS

[gcode_macro T98]
description: will open the filament runout sensor stuffs.
gcode:
    _FILAMENT_RUNOUT_MANAGER


#params_dropoff_path: [{'z':3.5, 'y':4}, {'z':0, 'y':0}, {'z':-12, 'y':0}]
#params_pickup_path: [{'z':-12, 'y':2}, {'z':-12, 'y':0}, {'z':1.5, 'y':0, 'f':0.5, 'verify':1}, {'z':0.5, 'y':2.5, 'f':0.5}, {'z':8, 'y':8}]  
#params_pickup_path: [{'z':-8, 'y':24}, {'z':-8}, {'f':0.5, 'verify':1}, {'y':3, 'z':3}]
# [{'y':3, 'z':3}, {'f':0.5}, {'z':-8}, {'z':-8, 'y':24}]
#params_changer_sc_path: [{'z':-8}, {'z':-8, 'y':24}]
#params_dock_modular_path: [{'y':3, 'z':3}]
#params_dropoff_path: [{'z':0, 'y':4}, {'z':0, 'y':0}, {'z':-12, 'y':0}]
#params_pickup_path: [{'z':-12, 'y':2}, {'z':-12, 'y':0}, {'z':1.5, 'y':0, 'f':0.5, 'verify':1}, {'z':0, 'y':0}, ]
#params_dropoff_path: [{'y':9.5 ,'z':4}, {'y':9.5, 'z':2}, {'y':5.5, 'z':0}, {'z':0, 'y':0, 'f':0.5}, {'z':-10, 'y':0}, {'z':-10, 'y':16}]
#params_pickup_path: [{'z':-10, 'y':16}, {'z':-10, 'y':0}, {'z':0, 'y':0, 'f':0.5, 'verify':1}, {'y':5.5, 'z':0}, {'y':9.5, 'z':2}, {'y':9.5 ,'z':4}]
#params_sc_path: [{'y':9.5 ,'z':4}, {'y':9.5, 'z':2}, {'y':5.5, 'z':0}, {'z':0, 'y':0, 'f':0.5}, {'z':-10, 'y':0}, {'z':-10, 'y':16}]
#params_sc_path: [{'z':5, 'y':60}, {'z':5, 'y':0}, {'z':0, 'y':0}, {'z':-6, 'y':0}, {'z':-6, 'y': 10}]
#params_stealthchanger_xol_path: [{'y':59, 'z':17.5},{'y':5, 'z':17.5},{'y':5, 'z':0.2},{'y':0.5, 'z':0.1},{'z':0, 'y':0, 'f':0.5},{'z':-10, 'y':0}, {'z':-10, 'y':16}]



[gcode_macro SVF_BACKUP]
variable_path: "~/printer_data/backup/save_variables_backup"
variable_min_hours_for_backup: 24
gcode:
    {% set sv      = printer.printer.lookup_object('save_variables', none) %}
    {% set can_run = printer.motion_report.live_velocity <= 0.001 and printer.print_stats.state|lower != 'printing' %}
    {% if sv is not none %}
        {% if can_run %}
            {% set import  = printer.printer.__class__.__init__.__globals__.importlib.import_module %}
            {% set time    = import('time') %}
            {% set os      = import('os') %}
            {% set glob    = import('glob') %}
            {% set pathlib = import('pathlib') %}

            UPDATE_DELAYED_GCODE ID=_SVF_BACKUP DURATION={4*60*60}
            {% set orig     = sv.filename %}
            {% set orig_abs = os.path.expanduser(orig) %}
            {% set defaultp = os.path.dirname(orig_abs) %}
            {% set basep    = path if path|length else defaultp %}
            {% set absdir   = os.path.realpath(os.path.expanduser(basep)) %}

            {% if not os.path.isdir(absdir) %}
                {% set _ = os.makedirs(absdir) %}{% endif %}

            {% set files = glob.glob(absdir ~ '/svf-backup_*.cfg')|sort %}
            {% set latest  = None %}
            {% set last_ts = 0 %}
            {% if files|length %}
                {% set latest  = files|last %}
                {% set stamp   = latest.rsplit('/',1)[1][11:-4] %}
                {% set last_ts = time.mktime(time.strptime(stamp, '%Y-%m-%d_%H%M'))|int %}{% endif %}

            {% set now_ts = time.time()|int %}
            {% if latest is none or (now_ts - last_ts) >= min_hours_for_backup|int(24)*60*60 %}
                {% set curr_txt = pathlib.Path(orig).read_text() %}
                {% set prev_txt = pathlib.Path(latest).read_text() if latest is not none else '' %}
                {% if latest is none or curr_txt != prev_txt %}
                    {% set ts   = time.strftime('%Y-%m-%d_%H%M', time.localtime(now_ts)) %}
                    {% set dest = absdir ~ '/svf-backup_' ~ ts ~ '.cfg' %}
                    {% set _    = pathlib.Path(dest).write_text(curr_txt) %}
                    RESPOND MSG="[SVF_BACKUP] wrote backup '{dest}'"    
                {% endif %}
            {% endif %}
        {% else %}
            UPDATE_DELAYED_GCODE ID=_SVF_BACKUP DURATION={15*60} # reschedule 15 mins from now
        {% endif %}
    {% endif %}

[delayed_gcode _SVF_BACKUP]
initial_duration: 1
gcode:
    SVF_BACKUP




[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>










#[ktamv]
#nozzle_cam_url: http://localhost/webcam/snapshot?max_delay=0
#server_url: http://localhost:8085
#move_speed: 1800
#send_frame_to_cloud: true
#detection_tolerance: 0

#[include ktamv-macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [tool_probe T0]
#*# z_offset = 0
#*#
#*# [tool_probe T1]
#*# z_offset = 0
#*#
#*# [tool_probe T2]
#*# z_offset = 0
#*#
#*# [tool_probe T3]
#*# z_offset = 0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.061100, 0.026100, -0.016400, 0.041100, 0.079850, 0.036100
#*# 	0.021100, 0.016100, 0.021100, 0.064850, 0.072350, 0.039850
#*# 	0.008600, -0.010150, 0.032350, 0.026100, 0.021100, 0.027350
#*# 	0.007350, 0.012350, 0.009850, 0.023600, 0.017350, 0.011100
#*# 	0.031100, 0.032350, 0.023600, 0.043600, 0.032350, 0.042350
#*# 	-0.030150, -0.005150, -0.003900, -0.000150, 0.047350, -0.037650
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 330.0
#*# min_y = 40.0
#*# max_y = 350.0
#*#
#*# [bed_mesh wave]
#*# version = 1
#*# points =
#*# 	-0.055545, -0.048193, 0.015622, 0.107709, 0.165288, 0.135017, 0.012136, -0.157250, -0.308351, -0.395431, -0.409383, -0.371168, -0.313830, -0.266983, -0.249306, -0.266983, -0.313830, -0.371168, -0.409383, -0.395431, -0.308351, -0.157250, 0.012136, 0.135017, 0.165288, 0.107709, 0.015622, -0.048193, -0.055545
#*# 	-0.048193, 0.022974, 0.122849, 0.166739, 0.088621, -0.097074, -0.297878, -0.407031, -0.371168, -0.210916, 0.007844, 0.217866, 0.377493, 0.472538, 0.503567, 0.472538, 0.377493, 0.217866, 0.007844, -0.210916, -0.371168, -0.407031, -0.297878, -0.097074, 0.088621, 0.166739, 0.122849, 0.022974, -0.048193
#*# 	0.015622, 0.122849, 0.165139, 0.057638, -0.169435, -0.370873, -0.393349, -0.190232, 0.155464, 0.503567, 0.748723, 0.863328, 0.882407, 0.863199, 0.851236, 0.863199, 0.882407, 0.863328, 0.748723, 0.503567, 0.155464, -0.190232, -0.393349, -0.370873, -0.169435, 0.057638, 0.165139, 0.122849, 0.015622
#*# 	0.107709, 0.166739, 0.057638, -0.193777, -0.395431, -0.339868, 0.007844, 0.472538, 0.808567, 0.872339, 0.684620, 0.370845, 0.065573, -0.142926, -0.215593, -0.142926, 0.065573, 0.370845, 0.684620, 0.872339, 0.808567, 0.472538, 0.007844, -0.339868, -0.395431, -0.193777, 0.057638, 0.166739, 0.107709
#*# 	0.165288, 0.088621, -0.169435, -0.395431, -0.313830, 0.124859, 0.649415, 0.883482, 0.648691, 0.065573, -0.592449, -1.106598, -1.407709, -1.539823, -1.573525, -1.539823, -1.407709, -1.106598, -0.592449, 0.065573, 0.648691, 0.883482, 0.649415, 0.124859, -0.313830, -0.395431, -0.169435, 0.088621, 0.165288
#*# 	0.135017, -0.097074, -0.370873, -0.339868, 0.124859, 0.701496, 0.863199, 0.370845, -0.516127, -1.297518, -1.638613, -1.540796, -1.225061, -0.933924, -0.820689, -0.933924, -1.225061, -1.540796, -1.638613, -1.297518, -0.516127, 0.370845, 0.863199, 0.701496, 0.124859, -0.339868, -0.370873, -0.097074, 0.135017
#*# 	0.012136, -0.297878, -0.393349, 0.007844, 0.649415, 0.863199, 0.255973, -0.819686, -1.573525, -1.494722, -0.699800, 0.322908, 1.153784, 1.635732, 1.786510, 1.635732, 1.153784, 0.322908, -0.699800, -1.494722, -1.573525, -0.819686, 0.255973, 0.863199, 0.649415, 0.007844, -0.393349, -0.297878, 0.012136
#*# 	-0.157250, -0.407031, -0.190232, 0.472538, 0.883482, 0.370845, -0.819686, -1.623262, -1.225061, 0.161970, 1.635732, 2.494003, 2.675400, 2.537486, 2.444984, 2.537486, 2.675400, 2.494003, 1.635732, 0.161970, -1.225061, -1.623262, -0.819686, 0.370845, 0.883482, 0.472538, -0.190232, -0.407031, -0.157250
#*# 	-0.308351, -0.371168, 0.155464, 0.808567, 0.648691, -0.516127, -1.573525, -1.225061, 0.486837, 2.190775, 2.651987, 1.832043, 0.548072, -0.432137, -0.778508, -0.432137, 0.548072, 1.832043, 2.651987, 2.190775, 0.486837, -1.225061, -1.573525, -0.516127, 0.648691, 0.808567, 0.155464, -0.371168, -0.308351
#*# 	-0.395431, -0.210916, 0.503567, 0.872339, 0.065573, -1.297518, -1.494722, 0.161970, 2.190775, 2.537486, 0.845358, -1.478731, -3.050501, -3.643365, -3.744964, -3.643365, -3.050501, -1.478731, 0.845358, 2.537486, 2.190775, 0.161970, -1.494722, -1.297518, 0.065573, 0.872339, 0.503567, -0.210916, -0.395431
#*# 	-0.409383, 0.007844, 0.748723, 0.684620, -0.592449, -1.638613, -0.699800, 1.635732, 2.651987, 0.845358, -2.159050, -3.744964, -3.265971, -2.049152, -1.486024, -2.049152, -3.265971, -3.744964, -2.159050, 0.845358, 2.651987, 1.635732, -0.699800, -1.638613, -0.592449, 0.684620, 0.748723, 0.007844, -0.409383
#*# 	-0.371168, 0.217866, 0.863328, 0.370845, -1.106598, -1.540796, 0.322908, 2.494003, 1.832043, -1.478731, -3.744964, -2.535479, 0.581876, 2.865645, 3.543936, 2.865645, 0.581876, -2.535479, -3.744964, -1.478731, 1.832043, 2.494003, 0.322908, -1.540796, -1.106598, 0.370845, 0.863328, 0.217866, -0.371168
#*# 	-0.313830, 0.377493, 0.882407, 0.065573, -1.407709, -1.225061, 1.153784, 2.675400, 0.548072, -3.050501, -3.265971, 0.581876, 4.109563, 4.505829, 3.933900, 4.505829, 4.109563, 0.581876, -3.265971, -3.050501, 0.548072, 2.675400, 1.153784, -1.225061, -1.407709, 0.065573, 0.882407, 0.377493, -0.313830
#*# 	-0.266983, 0.472538, 0.863199, -0.142926, -1.539823, -0.933924, 1.635732, 2.537486, -0.432137, -3.643365, -2.049152, 2.865645, 4.505829, 1.087351, -1.467351, 1.087351, 4.505829, 2.865645, -2.049152, -3.643365, -0.432137, 2.537486, 1.635732, -0.933924, -1.539823, -0.142926, 0.863199, 0.472538, -0.266983
#*# 	-0.249306, 0.503567, 0.851236, -0.215593, -1.573525, -0.820689, 1.786510, 2.444984, -0.778508, -3.744964, -1.486024, 3.543936, 3.933900, -1.467351, -5.000000, -1.467351, 3.933900, 3.543936, -1.486024, -3.744964, -0.778508, 2.444984, 1.786510, -0.820689, -1.573525, -0.215593, 0.851236, 0.503567, -0.249306
#*# 	-0.266983, 0.472538, 0.863199, -0.142926, -1.539823, -0.933924, 1.635732, 2.537486, -0.432137, -3.643365, -2.049152, 2.865645, 4.505829, 1.087351, -1.467351, 1.087351, 4.505829, 2.865645, -2.049152, -3.643365, -0.432137, 2.537486, 1.635732, -0.933924, -1.539823, -0.142926, 0.863199, 0.472538, -0.266983
#*# 	-0.313830, 0.377493, 0.882407, 0.065573, -1.407709, -1.225061, 1.153784, 2.675400, 0.548072, -3.050501, -3.265971, 0.581876, 4.109563, 4.505829, 3.933900, 4.505829, 4.109563, 0.581876, -3.265971, -3.050501, 0.548072, 2.675400, 1.153784, -1.225061, -1.407709, 0.065573, 0.882407, 0.377493, -0.313830
#*# 	-0.371168, 0.217866, 0.863328, 0.370845, -1.106598, -1.540796, 0.322908, 2.494003, 1.832043, -1.478731, -3.744964, -2.535479, 0.581876, 2.865645, 3.543936, 2.865645, 0.581876, -2.535479, -3.744964, -1.478731, 1.832043, 2.494003, 0.322908, -1.540796, -1.106598, 0.370845, 0.863328, 0.217866, -0.371168
#*# 	-0.409383, 0.007844, 0.748723, 0.684620, -0.592449, -1.638613, -0.699800, 1.635732, 2.651987, 0.845358, -2.159050, -3.744964, -3.265971, -2.049152, -1.486024, -2.049152, -3.265971, -3.744964, -2.159050, 0.845358, 2.651987, 1.635732, -0.699800, -1.638613, -0.592449, 0.684620, 0.748723, 0.007844, -0.409383
#*# 	-0.395431, -0.210916, 0.503567, 0.872339, 0.065573, -1.297518, -1.494722, 0.161970, 2.190775, 2.537486, 0.845358, -1.478731, -3.050501, -3.643365, -3.744964, -3.643365, -3.050501, -1.478731, 0.845358, 2.537486, 2.190775, 0.161970, -1.494722, -1.297518, 0.065573, 0.872339, 0.503567, -0.210916, -0.395431
#*# 	-0.308351, -0.371168, 0.155464, 0.808567, 0.648691, -0.516127, -1.573525, -1.225061, 0.486837, 2.190775, 2.651987, 1.832043, 0.548072, -0.432137, -0.778508, -0.432137, 0.548072, 1.832043, 2.651987, 2.190775, 0.486837, -1.225061, -1.573525, -0.516127, 0.648691, 0.808567, 0.155464, -0.371168, -0.308351
#*# 	-0.157250, -0.407031, -0.190232, 0.472538, 0.883482, 0.370845, -0.819686, -1.623262, -1.225061, 0.161970, 1.635732, 2.494003, 2.675400, 2.537486, 2.444984, 2.537486, 2.675400, 2.494003, 1.635732, 0.161970, -1.225061, -1.623262, -0.819686, 0.370845, 0.883482, 0.472538, -0.190232, -0.407031, -0.157250
#*# 	0.012136, -0.297878, -0.393349, 0.007844, 0.649415, 0.863199, 0.255973, -0.819686, -1.573525, -1.494722, -0.699800, 0.322908, 1.153784, 1.635732, 1.786510, 1.635732, 1.153784, 0.322908, -0.699800, -1.494722, -1.573525, -0.819686, 0.255973, 0.863199, 0.649415, 0.007844, -0.393349, -0.297878, 0.012136
#*# 	0.135017, -0.097074, -0.370873, -0.339868, 0.124859, 0.701496, 0.863199, 0.370845, -0.516127, -1.297518, -1.638613, -1.540796, -1.225061, -0.933924, -0.820689, -0.933924, -1.225061, -1.540796, -1.638613, -1.297518, -0.516127, 0.370845, 0.863199, 0.701496, 0.124859, -0.339868, -0.370873, -0.097074, 0.135017
#*# 	0.165288, 0.088621, -0.169435, -0.395431, -0.313830, 0.124859, 0.649415, 0.883482, 0.648691, 0.065573, -0.592449, -1.106598, -1.407709, -1.539823, -1.573525, -1.539823, -1.407709, -1.106598, -0.592449, 0.065573, 0.648691, 0.883482, 0.649415, 0.124859, -0.313830, -0.395431, -0.169435, 0.088621, 0.165288
#*# 	0.107709, 0.166739, 0.057638, -0.193777, -0.395431, -0.339868, 0.007844, 0.472538, 0.808567, 0.872339, 0.684620, 0.370845, 0.065573, -0.142926, -0.215593, -0.142926, 0.065573, 0.370845, 0.684620, 0.872339, 0.808567, 0.472538, 0.007844, -0.339868, -0.395431, -0.193777, 0.057638, 0.166739, 0.107709
#*# 	0.015622, 0.122849, 0.165139, 0.057638, -0.169435, -0.370873, -0.393349, -0.190232, 0.155464, 0.503567, 0.748723, 0.863328, 0.882407, 0.863199, 0.851236, 0.863199, 0.882407, 0.863328, 0.748723, 0.503567, 0.155464, -0.190232, -0.393349, -0.370873, -0.169435, 0.057638, 0.165139, 0.122849, 0.015622
#*# 	-0.048193, 0.022974, 0.122849, 0.166739, 0.088621, -0.097074, -0.297878, -0.407031, -0.371168, -0.210916, 0.007844, 0.217866, 0.377493, 0.472538, 0.503567, 0.472538, 0.377493, 0.217866, 0.007844, -0.210916, -0.371168, -0.407031, -0.297878, -0.097074, 0.088621, 0.166739, 0.122849, 0.022974, -0.048193
#*# 	-0.055545, -0.048193, 0.015622, 0.107709, 0.165288, 0.135017, 0.012136, -0.157250, -0.308351, -0.395431, -0.409383, -0.371168, -0.313830, -0.266983, -0.249306, -0.266983, -0.313830, -0.371168, -0.409383, -0.395431, -0.308351, -0.157250, 0.012136, 0.135017, 0.165288, 0.107709, 0.015622, -0.048193, -0.055545
#*# x_count = 29
#*# y_count = 29
#*# min_x = 20.0
#*# max_x = 330.0
#*# min_y = 40.0
#*# max_y = 350.0
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh sincfunc]
#*# version = 1
#*# points =
#*# 	0.753100, 0.370400, 0.860400, -0.422850, 0.205250, -0.277000, 0.438400, -0.469600, 0.219750, 0.186050, -0.365500, 0.111550, 0.252650, -0.233550, -0.119250, 0.254150, 0.024300, -0.235650, 0.033300, 0.207500, -0.065150, -0.180800, 0.080900, 0.158900, -0.087000, -0.142100, 0.087300, 0.129600, -0.084100
#*# 	-0.903900, -0.075500, -0.180000, -0.676200, 0.249350, 0.040200, -0.069900, -0.050000, 0.236350, -0.368450, 0.306250, -0.030850, -0.250900, 0.257900, 0.024000, -0.250750, 0.128950, 0.160350, -0.191550, -0.068900, 0.200150, 0.000500, -0.184600, 0.044400, 0.161550, -0.071450, -0.138750, 0.086400, 0.119100
#*# 	0.488400, 0.255400, -0.205200, 0.080650, 0.554900, -0.144300, -0.167250, 0.250900, -0.214250, 0.098750, 0.075650, -0.246450, 0.302200, -0.165050, -0.092850, 0.250950, -0.144450, -0.114350, 0.216750, -0.035250, -0.179850, 0.126450, 0.107450, -0.162650, -0.038350, 0.164600, -0.014750, -0.149900, 0.051100
#*# 	0.315050, -0.527250, 0.200750, 0.310100, -0.021850, -0.468500, 0.076100, 0.229350, -0.320500, 0.318500, -0.276150, 0.189200, -0.046900, -0.124750, 0.245900, -0.223400, 0.044400, 0.162500, -0.207950, 0.039150, 0.162150, -0.159350, -0.042150, 0.175350, -0.060350, -0.132900, 0.119500, 0.073100, -0.141200
#*# 	-0.561700, 0.532550, -0.007150, -0.377600, -0.341850, -0.016100, 0.403400, -0.029350, -0.256500, 0.329600, -0.321400, 0.303100, -0.280950, 0.232050, -0.132100, -0.016500, 0.163400, -0.222600, 0.136000, 0.050100, -0.185500, 0.139800, 0.046450, -0.171500, 0.089750, 0.097550, -0.148950, -0.001650, 0.141500
#*# 	-0.021850, -0.118150, -0.263600, 0.313850, 0.410650, 0.342400, 0.042050, -0.352300, -0.004000, 0.264550, -0.309000, 0.275100, -0.246200, 0.240700, -0.246000, 0.235800, -0.181350, 0.069700, 0.073800, -0.181200, 0.177650, -0.049600, -0.113400, 0.170550, -0.062500, -0.104650, 0.149350, -0.019450, -0.127500
#*# 	0.459700, -0.357600, 0.428150, -0.159650, -0.390200, -0.383250, -0.329550, -0.060600, 0.310950, 0.028600, -0.262100, 0.275600, -0.211100, 0.158550, -0.141550, 0.155600, -0.185750, 0.209100, -0.197450, 0.129100, -0.009000, -0.116800, 0.175500, -0.117750, -0.025850, 0.143600, -0.128400, -0.010050, 0.132350
#*# 	-0.079450, 0.342400, -0.296850, -0.070600, 0.341100, 0.350150, 0.334500, 0.311150, 0.074300, -0.276550, -0.047200, 0.253950, -0.238000, 0.145650, -0.070200, 0.034850, -0.036100, 0.065650, -0.112850, 0.160900, -0.185250, 0.160100, -0.075450, -0.044800, 0.140850, -0.148300, 0.051900, 0.082200, -0.142750
#*# 	-0.371500, 0.120950, -0.078300, 0.285600, -0.241150, -0.328950, -0.268550, -0.281300, -0.290900, -0.084600, 0.247400, 0.061500, -0.242650, 0.200550, -0.086150, -0.005300, 0.053800, -0.066700, 0.052600, -0.016100, -0.038250, 0.100500, -0.151200, 0.164300, -0.119800, 0.022450, 0.086800, -0.144100, 0.104950
#*# 	0.106050, -0.347200, 0.334500, -0.327050, 0.067300, 0.315000, 0.231250, 0.181500, 0.230700, 0.270450, 0.092450, -0.222250, -0.072600, 0.229800, -0.165300, 0.035300, 0.063750, -0.116150, 0.135050, -0.133000, 0.115050, -0.080750, 0.028850, 0.036850, -0.102850, 0.145650, -0.140100, 0.075850, 0.026100
#*# 	0.310950, 0.017600, -0.176200, 0.118450, 0.143350, -0.269900, -0.234050, -0.116500, -0.103500, -0.185050, -0.250600, -0.098550, 0.200200, 0.081350, -0.216250, 0.133100, 0.006550, -0.105550, 0.152950, -0.167950, 0.168050, -0.161350, 0.147900, -0.123100, 0.081650, -0.022100, -0.048050, 0.110000, -0.137500
#*# 	-0.103900, 0.297950, -0.188050, 0.181500, -0.276900, 0.157200, 0.255250, 0.102650, 0.015550, 0.038850, 0.144950, 0.231750, 0.103200, -0.180700, -0.088300, 0.202600, -0.104200, -0.040000, 0.132900, -0.168500, 0.172000, -0.165150, 0.159000, -0.155750, 0.152150, -0.141450, 0.115850, -0.070000, 0.005600
#*# 	-0.270100, -0.084600, 0.256550, -0.269700, 0.217300, 0.019450, -0.258350, -0.129150, 0.019000, 0.061850, 0.012450, -0.110200, -0.213950, -0.106800, 0.163250, 0.093750, -0.189100, 0.078450, 0.066100, -0.148500, 0.168200, -0.155850, 0.136650, -0.123350, 0.119650, -0.124150, 0.132400, -0.137250, 0.129950
#*# 	0.090450, -0.247900, 0.052450, 0.042950, 0.015550, -0.188450, 0.204400, 0.176900, -0.010700, -0.108000, -0.115650, -0.051850, 0.080200, 0.197300, 0.109500, -0.147500, -0.098000, 0.175900, -0.055750, -0.086000, 0.155050, -0.156850, 0.127450, -0.094550, 0.071250, -0.061200, 0.063750, -0.076500, 0.095400
#*# 	0.241600, 0.112500, -0.250600, 0.216800, -0.219150, 0.236900, -0.076600, -0.217400, -0.030050, 0.115750, 0.161650, 0.149450, 0.081400, -0.054450, -0.181650, -0.111500, 0.133150, 0.101300, -0.163200, 0.035700, 0.100650, -0.154700, 0.138450, -0.093150, 0.048250, -0.016200, -0.000800, 0.004100, 0.004400
#*# 	-0.072600, 0.208800, 0.035550, -0.168000, 0.182000, -0.108000, -0.089000, 0.214600, 0.092450, -0.096100, -0.173750, -0.185600, -0.167600, -0.102900, 0.032300, 0.167000, 0.112900, -0.120050, -0.103800, 0.150950, -0.018150, -0.111000, 0.149450, -0.116150, 0.057500, -0.004150, -0.032950, 0.053850, -0.061650
#*# 	-0.220450, -0.120450, 0.216750, -0.110200, 0.057700, -0.106350, 0.201850, -0.140600, -0.157500, 0.052550, 0.167950, 0.190550, 0.187600, 0.174150, 0.118000, -0.013250, -0.153250, -0.113750, 0.107950, 0.105650, -0.139200, 0.002800, 0.117850, -0.140650, 0.092150, -0.023500, -0.034000, 0.071400, -0.091500
#*# 	0.053400, -0.180700, -0.084900, 0.204600, -0.209950, 0.208050, -0.173750, 0.003300, 0.194850, 0.012400, -0.148400, -0.185700, -0.177900, -0.174950, -0.172350, -0.128000, -0.003100, 0.140350, 0.114150, -0.096750, -0.106900, 0.128000, 0.010650, -0.121850, 0.129550, -0.068050, -0.007050, 0.064350, -0.097500
#*# 	0.203600, 0.118350, -0.180100, 0.017750, 0.081400, -0.087800, 0.010400, 0.135600, -0.172000, -0.088650, 0.112100, 0.178750, 0.164050, 0.147400, 0.153300, 0.164800, 0.134000, 0.017100, -0.128200, -0.114200, 0.086400, 0.107650, -0.117300, -0.022350, 0.123500, -0.116950, 0.044850, 0.033200, -0.086500
#*# 	-0.034200, 0.161250, 0.109500, -0.194550, 0.147650, -0.123250, 0.154850, -0.185700, 0.076900, 0.153200, -0.055100, -0.167800, -0.156600, -0.119850, -0.108200, -0.126950, -0.153400, -0.136850, -0.029150, 0.116800, 0.113900, -0.076700, -0.107950, 0.107050, 0.032500, -0.123300, 0.103600, -0.023300, -0.054650
#*# 	-0.189100, -0.111150, 0.149050, 0.045600, -0.152200, 0.174150, -0.163050, 0.098750, 0.057850, -0.173700, -0.020100, 0.145750, 0.156350, 0.104050, 0.067050, 0.066800, 0.098850, 0.139650, 0.137300, 0.039450, -0.106000, -0.113300, 0.067650, 0.107850, -0.097300, -0.041250, 0.121650, -0.089900, 0.003700
#*# 	0.015650, -0.148000, -0.119650, 0.167000, -0.066000, -0.002750, 0.001250, 0.065850, -0.156600, 0.125450, 0.098300, -0.104400, -0.158350, -0.102100, -0.041150, -0.015250, -0.027350, -0.071000, -0.124550, -0.135800, -0.048250, 0.095850, 0.112400, -0.059150, -0.107450, 0.088000, 0.048850, -0.118750, 0.076250
#*# 	0.175750, 0.101300, -0.125200, -0.083900, 0.169500, -0.161450, 0.153300, -0.164700, 0.145950, -0.015950, -0.150950, 0.040300, 0.153850, 0.111500, 0.031950, -0.018150, -0.030000, -0.007750, 0.044650, 0.108950, 0.132800, 0.055700, -0.086200, -0.111300, 0.051200, 0.106700, -0.079100, -0.055350, 0.114900
#*# 	0.001900, 0.138900, 0.121650, -0.136650, -0.003100, 0.093850, -0.118900, 0.099050, -0.023700, -0.102100, 0.147100, 0.038850, -0.132550, -0.126700, -0.037600, 0.033900, 0.065950, 0.065900, 0.037350, -0.020550, -0.093250, -0.128700, -0.062050, 0.077100, 0.109950, -0.043700, -0.105750, 0.070650, 0.060850
#*# 	-0.162900, -0.090100, 0.107950, 0.104600, -0.157200, 0.103000, -0.060650, 0.066800, -0.114450, 0.152300, -0.075000, -0.110750, 0.086750, 0.139500, 0.055300, -0.035050, -0.084000, -0.099150, -0.091850, -0.061200, -0.001000, 0.077900, 0.123750, 0.067350, -0.068500, -0.108400, 0.036600, 0.104500, -0.062600
#*# 	-0.018150, -0.132600, -0.119150, 0.109650, 0.051800, -0.136850, 0.151900, -0.150850, 0.142850, -0.091200, -0.037600, 0.143650, -0.017300, -0.139250, -0.080950, 0.023800, 0.089300, 0.114200, 0.117800, 0.108350, 0.079400, 0.019800, -0.063150, -0.118100, -0.071750, 0.060300, 0.106700, -0.029950, -0.103050
#*# 	0.150000, 0.078200, -0.095950, -0.114200, 0.132800, -0.037600, -0.034200, 0.055050, -0.030000, -0.040750, 0.125950, -0.113000, -0.060950, 0.115600, 0.107900, -0.001650, -0.085150, -0.118600, -0.125100, -0.123550, -0.116500, -0.092400, -0.035900, 0.049150, 0.112000, 0.075350, -0.052550, -0.104800, 0.023650
#*# 	0.033000, 0.128000, 0.114200, -0.087850, -0.082300, 0.143750, -0.124550, 0.103200, -0.109500, 0.133450, -0.126400, 0.023800, 0.119600, -0.063750, -0.126600, -0.029500, 0.072500, 0.117450, 0.123850, 0.120100, 0.119050, 0.117700, 0.100850, 0.049450, -0.035950, -0.105550, -0.078200, 0.045200, 0.102750
#*# 	-0.136950, -0.065950, 0.088050, 0.117100, -0.106000, -0.016850, 0.096550, -0.122550, 0.122400, -0.099150, 0.031450, 0.078800, -0.127750, -0.009250, 0.125650, 0.065550, -0.050850, -0.112400, -0.120450, -0.110000, -0.103500, -0.106950, -0.113450, -0.105300, -0.060550, 0.023700, 0.098900, 0.080450, -0.038250
#*# x_count = 29
#*# y_count = 29
#*# min_x = 20.0
#*# max_x = 330.0
#*# min_y = 40.0
#*# max_y = 350.0
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh sine]
#*# version = 1
#*# points =
#*# 	0.000000, 0.000000, 0.000000, -0.000000, -0.000000, -0.000000
#*# 	0.000000, 0.180902, 0.111803, -0.111803, -0.180902, -0.000000
#*# 	0.000000, 0.111803, 0.069098, -0.069098, -0.111803, -0.000000
#*# 	-0.000000, -0.111803, -0.069098, 0.069098, 0.111803, 0.000000
#*# 	-0.000000, -0.180902, -0.111803, 0.111803, 0.180902, 0.000000
#*# 	-0.000000, -0.000000, -0.000000, 0.000000, 0.000000, 0.000000
#*# min_x = 20.0
#*# max_x = 330.0
#*# min_y = 40.0
#*# max_y = 350.0
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*#
#*# [bed_mesh monky]
#*# version = 1
#*# points =
#*# 	7.447750, 5.898618, 2.204534, -2.204534, -5.898618, -7.447750
#*# 	0.297910, 1.608714, 0.774566, -0.774566, -1.608714, -0.297910
#*# 	-3.277010, -0.536238, 0.059582, -0.059582, 0.536238, 3.277010
#*# 	-3.277010, -0.536238, 0.059582, -0.059582, 0.536238, 3.277010
#*# 	0.297910, 1.608714, 0.774566, -0.774566, -1.608714, -0.297910
#*# 	7.447750, 5.898618, 2.204534, -2.204534, -5.898618, -7.447750
#*# min_x = 20.0
#*# max_x = 330.0
#*# min_y = 40.0
#*# max_y = 350.0
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*#
#*# [tmc5160 stepper_y]
#*# driver_sgt = 1
#*#
#*# [tmc5160 stepper_x]
#*# driver_sgt = 1
#*#
#*# [stepper_x]
#*# position_min = -2.2250000000000227
#*# position_max = 350.0
#*#
#*# [stepper_y]
#*# position_min = -8.212500000000034
#*# position_max = 350.0
