[gcode_macro QUAD_GANTRY_LEVEL]
description: Quad-gantry accounting for difference of SVF probe and normal probe offsets.
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
  {% set p = printer %}
  {% set tcs = p['gcode_macro _toolchanger_settings'] %}
  {% set ra = p.toolhead.max_accel|float %}
  {% set svf = p.save_variables.variables %}
  {% set actn = p.tool_probe_endstop.active_tool_number %}
  {% set key = 'offsets_' ~ p.toolchanger.tool_names[actn]|replace('tool ', '',1)|lower %}

  {% set act_p_off = p.tool_probe_endstop.active_tool_probe_z_offset|float %}
  {% set svf_p_off = ((svf.get(key, {})).get('probe', 0))|float %}
  {% set diffrence = svf_p_off - act_p_off %}

  {% if diffrence|abs >= 0.25 %}
    _UNIFIED_RESPOND MSG="{'?tTool QGL?nyour offsets differ quite a bit, hit save offsets here and there?p(TOOL)QUAD_GANTRY_LEVEL ?s2?t?mOffsets differ (' ~ diffrence|round(2) ~ ')'}"
  {% endif %}
  #────────────────────────────────────────────────────────
  # doesnt know about our gcode offset, and probe offset, but not about our spoofed SVF offset. (the real one) 
  SET_GCODE_OFFSET Z_ADJUST={diffrence}
  
  {% if tcs.get('macro_accel_divider', False) %} 
    SET_VELOCITY_LIMIT ACCEL={(p.configfile.config.printer.max_accel|float / tcs.macro_accel_divider|float)|int} 
  {% endif %}
  #────────────────────────────────────────────────────────
  {% set macro_name = tcs.get('user_qgl_macro', '_QUAD_GANTRY_LEVEL') %} 
  {% set macro_name = '_QUAD_GANTRY_LEVEL' if 'gcode_macro' ~ macro_name not in printer else macro_name %} 
  {macro_name} {rawparams}
  #────────────────────────────────────────────────────────
  TC_LOAD_OFFSETS SILENT=YES
  SET_VELOCITY_LIMIT ACCEL={ra}

