#########################################################################################
# Docking Tuning #
#########################################################################################

[gcode_macro TC_DEBUG]
variable_pathindex:0
gcode:
    {% set tool_numbers = printer.toolchanger.tool_numbers %}
    RESPOND TYPE=command MSG="action:prompt_begin Tool Dock Debugging"
    RESPOND TYPE=command MSG="action:prompt_text Select tool to debug"
    #####################TOOL SELECTION
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    {% for tool_number in tool_numbers %}
        RESPOND TYPE=command MSG="action:prompt_button {tool_number}|_TC_DEBUG_T_BUTTON TN={tool_number}|warning"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Position tool in dock|_POSITION_SELECTED_TOOL_IN_DOCK|info"
    RESPOND TYPE=command MSG="action:prompt_button _TC_DEBUG_SAVE|_TC_DEBUG_SAVE|info"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    #####################COORDINATE DOCK ADJUSTMENT/FINE TUNING
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button X+|_TC_DEBUG_ADJUST_DOCKING_POS AXIS=X DIR=POS|info"
    RESPOND TYPE=command MSG="action:prompt_button Y+|_TC_DEBUG_ADJUST_DOCKING_POS AXIS=Y DIR=POS|info"
    RESPOND TYPE=command MSG="action:prompt_button Z+|_TC_DEBUG_ADJUST_DOCKING_POS AXIS=Z DIR=POS|info"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button X-|_TC_DEBUG_ADJUST_DOCKING_POS AXIS=X DIR=NEGATIVE|info"
    RESPOND TYPE=command MSG="action:prompt_button Y-|_TC_DEBUG_ADJUST_DOCKING_POS AXIS=Y DIR=NEGATIVE|info"
    RESPOND TYPE=command MSG="action:prompt_button Z-|_TC_DEBUG_ADJUST_DOCKING_POS AXIS=Z DIR=NEGATIVE|info"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_show"


## option to drive into dock to adjust screws
## option to run path 10x

[gcode_macro _TC_DEBUG_SAVE]
gcode:
    {% for tool in printer.toolchanger.tool_numbers %}
        SAVE_TOOL_PARAMETER T={tool}  PARAMETER=params_park_x
        SAVE_TOOL_PARAMETER T={tool}  PARAMETER=params_park_y
        SAVE_TOOL_PARAMETER T={tool}  PARAMETER=params_park_z
    {% endfor %}

[gcode_macro _TC_DEBUG_ADJUST_DOCKING_POS]
description: "[AXIS=X/Y/Z] [DIR=POS/NEGATIVE]"
gcode:
    {% set pi = printer["gcode_macro TC_DEBUG"].pathindex|default(0)|int %}
    {% if pi != 0 %}    
        {% if params.DIR == "NEGATIVE" %}
        {% set move = "-" + params.AXIS|string %}
        {% else %}
        {% set move = params.AXIS|string %}
        {% endif %}
        {% set tool = printer.toolchanger.tool_numbers[_POSITION_SELECTED_TOOL_IN_DOCK.toolnumber|int] %}
        G91 
        G0 {move}0.1 F1000
        G90
        SET_TOOL_PARAMETER T={tool} PARAMETER='params_park_x' VALUE={printer.toolhead.position[0]|float}
        SET_TOOL_PARAMETER T={tool} PARAMETER='params_park_y' VALUE={printer.toolhead.position[1]|float}
        SET_TOOL_PARAMETER T={tool} PARAMETER='params_park_z' VALUE={printer.toolhead.position[2]|float}
    {% endif %}

[gcode_macro _TC_DEBUG_T_BUTTON]
gcode:
    SET_GCODE_VARIABLE MACRO=_POSITION_SELECTED_TOOL_IN_DOCK VARIABLE=toolnumber VALUE={params.TN|default(0)|int}

[gcode_macro _TC_DEBUG_BASE_POS]
gcode:
    _CHECK_REVERSE_INDEX
    {% set tool = printer.toolchanger.tool_numbers[_POSITION_SELECTED_TOOL_IN_DOCK.toolnumber|int] %}
    {% set fast = tool.params_fast_speed|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set cur_z = printer.toolhead.position[2]|float %}
    {% set safey = printer.toolchanger.params_safe_y|float %}
        G90
        G0 Z{ [cur_z+1.0, max_z]|min } F{fast}
        G0 Y{safey} F{fast}
        G0 X{tool.params_park_x|float} F{fast}

[gcode_macro _CHECK_REVERSE_INDEX]
gcode:
    {% set tools = printer.toolchanger.tool_names %}
    {% set pi = printer["gcode_macro TC_DEBUG"].pathindex|default(0)|int %}
    {% set tn = printer["gcode_macro _POSITION_SELECTED_TOOL_IN_DOCK"].toolnumber|int %}
    {% set tool = printer[tools[tn]] %}
    {% set path = tool.params_pickup_path|default([]) %}
    {% set x = tool.params_park_x|float %}
    {% set y = tool.params_park_y|float %}
    {% set z = tool.params_park_z|float %}
    {% set speed = tool.params_path_speed|float %}
    {% set ns = namespace(current=pi, run=True) %}

    {% if pi > 0 %}
        {% for _ in path %}
            {% if ns.run %}
                {% if ns.current <= pi %}
                    {% set pos = path[ns.current] %}
                {% endif %}
                G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float}{% endif %} F{speed}
                {% if ns.current == 0 %}
                    {% set ns.run = False %}
                {% else %}
                    {% set ns.current = ns.current - 1 %}
                {% endif %}
            {% endif %}
        {% endfor %}
        SET_GCODE_VARIABLE MACRO=TC_DEBUG VARIABLE=pathindex VALUE=0
    {% endif %}



[gcode_macro _POSITION_SELECTED_TOOL_IN_DOCK]

variable_toolnumber:1
gcode:
    {% set tn = printer.tool_probe_endstop.active_tool_number|int %}
    {% set tools = printer.toolchanger.tool_names %}
    
    {% set pi = printer["gcode_macro TC_DEBUG"].pathindex|int %}

    
    RESPOND TYPE=echo MSG="path index {pi}"
    {% if pi == 0 %}
        ################## Drop the current tool if it's not the requested one ##################
        {% if tn != -1 %}
            {% set tool = printer[tools[tn]] %}
            {% set x = tool.params_park_x|float %}
            {% set y = tool.params_park_y|float %}
            {% set z = tool.params_park_z|float %}
            {% set fast = tool.params_fast_speed|float %}
            {% set path = tool.params_dropoff_path %}
            {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
            {% set cur_z = printer.toolhead.position[2]|float %}
            RESPOND TYPE=echo MSG="Dropping off {tool.name}"
            
            G90
            ; Move 1 mm up to avoid crashes
            G0 Z{ [cur_z+1.0, max_z]|min } F{fast}
            # Move to safe docking position
            ROUNDED_G0 Y={tool.params_safe_y} D=20 F={fast}
            ROUNDED_G0 X={x} D=150 F={fast}
            ROUNDED_G0 Z={z + path[0]['z']|float} D=20 F={fast}
            ROUNDED_G0 Y={y + path[0]['y']|float} D=0 F={fast}
            STOP_TOOL_PROBE_CRASH_DETECTION
            
            # Run dropoff path
            {% for pos in path %}
                {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
                G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
            {% endfor %}
        {% endif %}
        ################## Done dropping previous tool ##################
    
        ### Try to pick up the requested tool ###
       {% set tool = printer[tools[toolnumber|int]] %}
        {% set x = tool.params_park_x|float %}
        {% set y = tool.params_park_y|float %}
        {% set z = tool.params_park_z|float %}
        {% set fast = tool.params_fast_speed|float %}
        {% set path = tool.params_pickup_path %}
    
        G90
        # Move to pickup position
        ROUNDED_G0 Y={tool.params_close_y} F={fast} D=5
        ROUNDED_G0 X={x} Z={z + path[0]['z']|float} F={fast} D=5
        ROUNDED_G0 Y={y + path[0]['y']|float} F={fast} D=0
    
        {% set ns = namespace(run=True, index=0) %}
        {% for pos in path %}
            {% if ns.run %}
                {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
                G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float}{% endif %} F{speed}
            {% endif %}
        
            {% if 'verify' in pos %}
                {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
                G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float}{% endif %} F{speed}
                RESPOND TYPE=echo MSG="Tool position in dock, finger around now. Index: {ns.index}"
                SET_GCODE_VARIABLE MACRO=TC_DEBUG VARIABLE=pathindex VALUE={ns.index}
                {% set ns.run = False %}
            {% endif %}
        
            {% set ns.index = ns.index + 1 %}
        {% endfor %}
    {% endif %}





    
[gcode_macro TOOL_DOCKING_FINETUNE]
description: [T=<Tool Number>] [X=<X offset>] [Y=<Y offset>] [Z=<Z offset>]
  Tune the docking, home, QGL level with T0, remove T0 and place the tool to be tuned on the shuttle.
  then run this command, XYZ are the offsets applied to the tools docking coordinates (from config)
gcode:
      {% if params.T is not defined %}
          INITIALIZE_TOOLCHANGER 
      {% endif %}
  _TOOL_DOCKING_FINETUNE {rawparams}
    
[gcode_macro _TOOL_DOCKING_FINETUNE]
gcode:
    {% if printer.tool_probe_endstop.active_tool_number|int != -1 %}
          {% set tn = params.T|default(printer.tool_probe_endstop.active_tool_number)|int %} #% SET_GCODE_VARIABLE MACRO=_TOOL_DOCKING_FINETUNE  VARIABLE=tn VALUE={params.T|default(printer.tool_probe_endstop.active_tool_number)|int} %}
          {% set tool = printer.tool[printer.tool_names[tn]] %}
        
        RESPOND TYPE=echo MSG="Testing T{tn|string}"
        
        {% if params.X is defined %}
            {% set x = tool.params_park_x|float + params.X|float %}
            {% set y = tool.params_park_y|float + params.Y|float %}
            {% set z = tool.params_park_z|float + params.Z|float %}
        {% else %}
            {% set x = tool.params_park_x|float %}
            {% set y = tool.params_park_y|float %}
            {% set z = tool.params_park_z|float %}
        {% endif %}
        
        {% set fast = tool.params_fast_speed|float %}
        {% set path = tool['params_' ~ tool.params_type ~ '_path'] %}
        {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
        {% set cur_z = printer.toolhead.position[2]|float %}

        # Store variables for continuation
        SET_GCODE_VARIABLE MACRO=_CONTINUE_DOCKING_ALIGNMENT_TEST VARIABLE=path VALUE={printer.tool_probe_endstop.active_tool_number|int}
        SET_GCODE_VARIABLE MACRO=_CONTINUE_DOCKING_ALIGNMENT_TEST VARIABLE=x VALUE={x|float}
        SET_GCODE_VARIABLE MACRO=_CONTINUE_DOCKING_ALIGNMENT_TEST VARIABLE=y VALUE={y|float}
        SET_GCODE_VARIABLE MACRO=_CONTINUE_DOCKING_ALIGNMENT_TEST VARIABLE=z VALUE={z|float}

        G90
        ; Move 1 mm up to avoid crashing into things
        G0 Z{ [cur_z+1.0, max_z]|min } F{fast}
        RESPOND TYPE=echo MSG="Docking at X{x|string} Y{y|string} Z{z|string}"

        {% if y + path[0]['y']|float != printer.toolhead.position[1]|float %}
            ROUNDED_G0 Y={tool.params_safe_y} D=50 F={fast}
        {% endif %}

        ROUNDED_G0 X={x} D=150 F={fast}
        ROUNDED_G0 Z={z + path[0]['z']|float} D=20 F={fast}
        ROUNDED_G0 Y={y + path[0]['y']|float} D=0 F={fast}

        STOP_TOOL_PROBE_CRASH_DETECTION

        # Drop the tool
        {% for pos in path %}
            G0 Y{y + pos['y']|float} Z{z + pos['z']|float} F{tool.params_path_speed|float * (pos.get('f', 1.0)|float) }
        {% endfor %}
    {% endif %}


[gcode_macro _CONTINUE_DOCKING_ALIGNMENT_TEST]
variable_x: 0
variable_y: 0
variable_z: 0
variable_path: 0
gcode:
    {% set tool = printer[printer.toolchanger.tool] %}
    {% set path = tool['params_' ~ tool.params_type ~ '_path'] %}

    SET_TOOL_PARAMETER PARAMETER='params_path_speed' VALUE=300

    # Try to pick up the tool
    {% for pos in path %}
      {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
      G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
      {% if 'verify' in pos %}
          _VERIFY_TOOL_DETECTED T={tool.tool_number}
      {% endif %}
    {% endfor %}

    RESET_TOOL_PARAMETER PARAMETER='params_path_speed'
    _REPORT_TOOL_DETECTED


    [gcode_macro _REPORT_TOOL_DETECTED]
gcode:
  {% if printer.tool_probe_endstop.active_tool_number | int == -1 %}
    RESPOND TYPE=echo MSG='Tool not detected, please place on shuttle manually before rerunning the command'
  {% else %}
    RESPOND TYPE=echo MSG='T{printer.tool_probe_endstop.active_tool_number|string} Docked'
  {% endif %}

#########################################################################################
# Docking Tuning END #
#########################################################################################









