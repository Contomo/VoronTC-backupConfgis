[gcode_macro _Z_AXIS_LOCK]
gcode:
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1



[gcode_macro TEST_MAX_FEEDRATE]
variable_max_feedrate: 50000
variable_start_feedrate: 10000

gcode:
  {% set max_feedrate = params.max_feedrate|default(100000)|int %}
  {% set start_feedrate = params.start_feedrate|default(30000)|int %}
  {% set feedrate_step = 1000 %}
  G90
  G0 Z50
  G0 X50 Y50
  {% for feedrate in range(start_feedrate, max_feedrate + feedrate_step, feedrate_step) %}
    RESPOND TYPE=echo MSG="Testing feedrate: F{feedrate}"
    G0 X300 F{feedrate}
    G0 Y300 F{feedrate}
    G0 X50 F{feedrate}
    G0 Y50 F{feedrate}
  {% endfor %}

 
[gcode_macro CLEAN_PURGE_NOZZLE]
variable_start_x: 150
variable_start_y: 294
variable_start_z: 10.6
variable_wipe_dist_y: -3
variable_wipe_qty: 5
variable_wipe_spd: 50
variable_raise_distance: 18
variable_purge_loc_x: 350
variable_purge_loc_y: -5.95
gcode:




#------------------------------------------------------------------------------------------
[gcode_macro KILL_YOURSELF]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}

    
    #

    {% set x_offsets = [] %}
    {% set y_offsets = [] %}
    {% set z_offsets = [] %}

    # Perform probing operation
    #G30
    SELECT_TOOL T=0  RESTORE_AXIS=XYZ
    _CALIBRATE_MOVE_OVER_PROBE
    TOOL_LOCATE_SENSOR
    SELECT_TOOL T={params.TOOL}  RESTORE_AXIS=Z
    {% for i in range(5) %}  # Repeat the calibration process three times
        # Move to a position over the probe
        _CALIBRATE_MOVE_OVER_PROBE

        # Locate the sensor
        #TOOL_LOCATE_SENSOR

        # Calibrate tool offset
        TOOL_CALIBRATE_TOOL_OFFSET

        # Probe offset calibration
        # TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T0"

        # Retrieve tool offsets
        TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool T{params.TOOL}" ATTRIBUTE=gcode_x_offset VALUE="{% raw %}{x:0.6f}{% endraw %}"
        TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool T{params.TOOL}" ATTRIBUTE=gcode_y_offset VALUE="{% raw %}{y:0.6f}{% endraw %}"
        TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool T{params.TOOL}" ATTRIBUTE=gcode_z_offset VALUE="{% raw %}{z:0.6f}{% endraw %}"
        {% set tool = printer.toolchanger.tool %} #current tool
        {% set x_offset = printer[tool].gcode_x_offset %}
        {% set y_offset = printer[tool].gcode_y_offset %}
        {% set z_offset = printer[tool].gcode_z_offset %}
        
        # Append offsets to respective lists
        {% set _ = x_offsets.append(x_offset) %}
        {% set _ = y_offsets.append(y_offset) %}
        {% set _ = z_offsets.append(z_offset) %}
                # Print tool offsets for debugging
        M118 Debug: X Offset: {x_offsets}
        M118 Debug: Y Offset: {y_offsets}
        M118 Debug: Z Offset: {z_offsets}
    {% endfor %} # End loop for calibration repetitions

    G0 X175 Y175 Z20 F10000 D=100

    # Calculate average offsets
    {% set x_avg = (x_offsets | sum) / (x_offsets | length) if x_offsets | length > 0 else 0 %}
    {% set y_avg = (y_offsets | sum) / (y_offsets | length) if y_offsets | length > 0 else 0 %}
    {% set z_avg = (z_offsets | sum) / (z_offsets | length) if z_offsets | length > 0 else 0 %}

    # Calculate deviations
    {% set x_deviation = (x_offsets | sum - x_avg) / (x_offsets | length) if x_offsets | length > 0 else 0 %}
    {% set y_deviation = (y_offsets | sum - y_avg) / (y_offsets | length) if y_offsets | length > 0 else 0 %}
    {% set z_deviation = (z_offsets | sum - z_avg) / (z_offsets | length) if z_offsets | length > 0 else 0 %}

    # Print average offsets and deviations
    M118 Average Tool X Offset: {x_avg}
    M118 Average Tool Y Offset: {y_avg}
    M118 Average Tool Z Offset: {z_avg}
    M118 Tool X Offset Deviation: {x_deviation}
    M118 Tool Y Offset Deviation: {y_deviation}
    M118 Tool Z Offset Deviation: {z_deviation}