

# Machine start G-code
# PRINT_START TOOL_TEMP={first_layer_temperature[initial_tool]} BED_TEMP=[first_layer_bed_temperature] TOOL=[initial_tool]{if is_extruder_used[0]} T0_TEMP={first_layer_temperature[0]}{endif}{if is_extruder_used[1]} T1_TEMP={first_layer_temperature[1]}{endif}{if is_extruder_used[2]} T2_TEMP={first_layer_temperature[2]}{endif}{if is_extruder_used[3]} T3_TEMP={first_layer_temperature[3]}{endif}{if is_extruder_used[4]} T4_TEMP={first_layer_temperature[4]}{endif}{if is_extruder_used[5]} T5_TEMP={first_layer_temperature[5]}{endif}

# Layer change G-code
# SET_PRINT_STATS_INFO TOTAL_LAYER=[total_layer_count] CURRENT_LAYER=[layer_num]

# Change filament G-code
# RESTORE_OVERWRITE X={x_after_toolchange} Y={y_after_toolchange} Z={z_after_toolchange}

# Change extrusion role G-code
# SET_PRINT_STATS_INFO EXTRUSION_ROLE=[extrusion_role]

[gcode_macro RESTORE_OVERWRITE]
description: "deprecated! unless your slicer can do it?"
variable_invalid: False
gcode:
    {% import toolchanger_helper as tch with context %}
    {% import variable_helper    as svh with context %}
    
    {% set p, th = printer, printer.toolhead %}
    {% set overwrite = {} %}

    {% if not invalid %}
        {% for ax in ['X', 'Y', 'Z'] if ax in params %}
            {% set val = params[ax]|float(999) %}
            {% if val < th.axis_maximum[ax|lower] and val > th.axis_minimum[ax|lower] and not invalid %}
                {% set _ = overwrite.update({ax: val|float}) %}
            {% else %}
                {tch.respond_colored('your slicer provided gibberish, disabled for safety. (' ~ rawparams ~ ')', 'RESTORE_OVERWRITE', 'error--text')}
                {svh.gcode_var_update('RESTORE_OVERWRITE', 'invalid', True)}
                {% set _ = overwrite.clear() %}
                {% set _ = params.clear() %}
            {% endif %}
        {% else %}
            {svh.gcode_var_update('TOOLCHANGER', 'restore_pos_overwrite', False)}
            {tch.respond_colored('disabled next.', 'RESTORE_OVERWRITE', 'grey')}
        {% endfor %}
        {tch.respond_colored('next  â†’  ' ~ tch.fmt_coord(overwrite), 'RESTORE_OVERWRITE', 'lightgray') if overwrite else ''}
        {svh.gcode_var_update('TOOLCHANGER', 'restore_pos_overwrite', overwrite if overwrite else False)}
    {% endif %}



# Usage: SET_PAUSE_AT_EXTRUSION_ROLE [ENABLE=[0|1]] [ROLE=<name> or <[names]>]
[gcode_macro SET_PAUSE_AT_EXTRUSION_ROLE]
description: "Arms a pause to trigger on a specific slicer feature type. Usage: SET_PAUSE_AT_EXTRUSION_ROLE ROLE=InternalInfill"
variable_current_extrusion_role: None
gcode:
    {% set pause_config = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_extrusion_role %}
    {% set ENABLE = params.ENABLE|int != 0 if 'ENABLE' in params else 'ROLE' in params %}
    {% set _role = params.ROLE|default(pause_config.extrusion_role)|string|trim|reject('in', ['[', ']', '"', "'"])|list|join('') %}
    {% set ROLES = _role.split(',')|map('trim')|map('lower')|list %}
    {% set MACRO = params.MACRO|default(pause_config.call, True) %}
    SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_extrusion_role VALUE="{ { 'enable': ENABLE, 'extrusion_role':ROLES, 'call':MACRO } }"

# Usage: SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER=<current_layer>] [EXTRUSION_ROLE=<current_extrusion_role>]
[gcode_macro SET_PRINT_STATS_INFO]
rename_existing: _SET_PRINT_STATS_INFO_FEATURE
variable_pause_at_extrusion_role: { 'enable': False, 'extrusion_role': None, 'call': 'PAUSE' }
gcode:
    {% set role = params.pop('ROLE', none) or params.pop('EXTRUSION_ROLE', none) or params.pop('FEATURE_TYPE', none) %}
    {% if role is not none %}
        SET_GCODE_VARIABLE MACRO=SET_PAUSE_AT_EXTRUSION_ROLE VARIABLE=current_extrusion_role VALUE="'{role|lower}'"
        {% set roles = pause_at_extrusion_role.extrusion_role %}
        {% if pause_at_extrusion_role.enable and role|lower in (roles is string and [roles] or roles)|map('lower')|list %}
            RESPOND TYPE=echo MSG='{"%s, forced by pause_at_extrusion_role [%s]" % (pause_at_extrusion_role.call, role)}'
            SET_PAUSE_AT_EXTRUSION_ROLE ENABLE=0
            {pause_at_extrusion_role.call}
        {% endif %}
    {% endif %}
    {% if params or (not params and role is none) %} ;dont run if that was it (pause at next layer gets triggered on emtpy command!?!?!????)
        _SET_PRINT_STATS_INFO_FEATURE {params|xmlattr}
    {% endif %}
    