#🟨────────────────────────────────────────────────────────────────────────────────────────#
#🟨 toolchanger related settings to edit. 
#🟨────────────────────────────────────────────────────────────────────────────────────────#
[toolchanger]
on_axis_not_homed: home
initialize_on: manual #first-use # homing

# params_*: 
  # Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via
  # `toolchanger.params_name`.
  # Also will be copied to any tools for this toolchanger with local
  # values overriding. 

params_safe_y: 210
params_close_y: 25

params_fast_speed: 20000
params_path_speed: 2000

# ─── update your pickup paths based on the changer you have! default right now is SC
params_dropoff_path: [{'z':3.5, 'y':4, 'f':3.0}, {'z':2, 'y':1, 'f':2.0}, {'z':1, 'y':0, 'f':1.0}, {'z':0, 'y':0, 'f':0.8}, {'z':-12, 'y':0, 'f':3}]
params_pickup_path: [{'z':-12, 'y':2, 'f':3.0}, {'z':-10, 'y':0, 'f':2.0},{'z':-5, 'y':0, 'f':1.0}, {'z':1, 'y':0, 'f':0.5, 'verify':1}, {'z':2, 'y':2, 'f':0.5}, {'z':3, 'y':5, 'f':2}]




#🟨────────────────────────────────────────────────────────────────────────────────────────#
#🟨 main settings to edit. 
#🟨────────────────────────────────────────────────────────────────────────────────────────#
[gcode_macro _toolchanger_settings]
#
variable_t_command_restore_axis:            'XYZ'
#
# disable those to silence console spam
variable_debug_messages:                    True
variable_warning_messages:                  True
variable_valid_messages:                    True

#───────────────────────> Homing related settings <───────────────────────
# use this to quieten down moves during macros. 
# Moves that dont require speed will be quieter that way.
# set to 1 to disable. (divide by 1 is the same)
variable_macro_accel_divider:               8
#
# basic meaning, for probing the tap probe will
# require heat. (calibration probe will always heat regardless)
variable_use_tap_requires_temperature:     False
#
#─────────────────────> Offset/calibration settings <─────────────────────
# ─── Logging/Analysis/data collection ───
# comment to disable. Will save this many calibration results to a rolling storage variable inside the svf.
# note that T0 represents your sensors location in this storage, its merely a representation of homing/sensor position.
#
# to read out stats call: 'TC_OFFSET_STATS'
variable_offset_history:                  {'max_entries': 10, 'rounding': 5}
#
# the rounding used when saving the gcode offsets to the regular offset dicts.
variable_save_tool_offset_rounding:        4
#
# enable the probe z trigger calibration to also run with your calibration runs (instead of just XYZ).  
variable_enable_probe_calibration:         True
#
# very experimental! how do i describe this....?
# if more than that amount tools are calibrated at once,and all tools are fairly close in change (0.25, 0.26, 0.3, 0.28) for the probe offset,
# it is assumed that rather than all tool probes being off by that amount, the trigger to bottom Z of your probe is off by that amount.
# min_tools = min tools when this does its thing        ||| max_variation = in percent, between probe values
# MAD = median absolute deviation, filtering at mad_k × MAD ||| max_drift = max allowable adjustment range.
variable_ttbz_drift_autoadjust:            { 'min_tools': 3, 'weight_history': 0.3, 'max_drift': 0.4, 'mad_k': 0.3 }
#
#─────────────────────> Save variable file settings <─────────────────────
# valid options are: Startup|Use|Always (comment the variable to disable)
variable_svf_auto_repair:                  'Always'
#
# will automatically remove invalid entries or structures inside the gcode offset variables.
# (will print whats removed if something is, and its value)
variable_svf_remove_invalid:                True
#
# ─── Offset loading ───
# This is just a safety measure.
# will clamp offsets to those in case something overtly big was put in ;)
variable_max_allowed_offsets:               2.5
#

#
#─────────────────────> Change/Drop Failure handling <─────────────────────
#
# Divide the speed used in toolchange failure handling
variable_tc_failure_speed_divider:          4
#
# Divide the accel used in toolchange failure handling
variable_tc_failure_accel_divider:          8
#
# These values merely represent the button colors in mainsail
# by button colors i mean the small dot inside the buttons.
variable_toolchange_failure_color:          "ff0000"  # Red — failure
variable_toolchange_pickup_color:           "ff66cc"  # Pink — pickup
variable_toolchange_dropoff_color:          "00ffff"  # Cyan — dropoff
variable_toolchange_active_color:           "ffffff"  # White — active
gcode:




# 🟩─────────────────────────────────────────────────────────────────────────────#
#                          TOOL PROBE CALIBRATION SETTINGS                      #
# 🟩─────────────────────────────────────────────────────────────────────────────#
#
# This section defines parameters used by your tool probing system to
# calibrate tool XYZ and or probe offsets.
#
# 🛠️ Hardware:
#   Nudge, sexball, z endstop, any modifcations inbetween.
#   basicall a buttom that also gets pressed from left right front back.
# 
# ──────────────────────────────────────────────────────────────────────────────#
# 🔌 'pin': GPIO pin (e.g., '^PG11')
#     The pin Klipper will monitor to detect a probe trigger.
#
# 🧭 'spread': X/Y distance from center for probing sequence (in mm)
#     This defines how far the tool moves during the touch pattern.
#     - For large pins (≥5mm), use 3.5–4.0
#     - Larger values = more overtravel, takes longer, safer for larger variance in tools or larger pins
#     - Smaller values = less overtravel but may hit too early for large variance tools/large pins
#
# ↘️ 'lower_z': Distance to lower the nozzle to hit. (0 -> slides over, 3-4 -> hits silicone sock)
#     - 0.1–0.2 = minimal travel, may work, usually cleaner nozzle around here
#     - 0.4–0.5 = safer hit margin, possibly less accurate.
#
# 🚀 Motion Speeds:
# ───────────────────────────────────────────────────────
# 'travel_speed': Move speed between probes (mm/s)
# 'speed': move speed during probes 
# 'lift_speed':
# 'final_lift_z': Distance to raise Z after final probe
#
# 🔁 Sampling:
# ───────────────────────────────────────────────────────
# 'sample_retract_dist': Z retract between samples (Z) (mm)
# 'samples': Number of probe samples to take (usually 3–5)
# 'samples_tolerance': Max variance (mm) allowed between samples (will abort if exceeded)
# 'samples_result': Aggregation method (e.g., 'median', 'average')
#
# 🔢 'trigger_to_bottom_z': Used in trigger calibration calculations.
#     Defines Z distance from probe *trigger* to mechanical bottom out.
#     sort of like the distance from when your keyboard key registers a hit, to where it actually hits the bottom.
#     Get accurate value using 'TC_GET_PROBE_TRIGGER_TO_BOTTOM'.
# 
# 📝 Hint: To disable probing functionality change: 'variable_enable_probe_calibration' to False
#
# 🟩─────────────────────────────────────────────────────────────────────────────#


[tools_calibrate]
pin: ^PG11
spread: 3 #7
lower_z: 0.4 #0.2 #0.5
travel_speed: 100 #20
speed: 2.5 #1.5
lift_speed: 4 #8
final_lift_z: 4 #6
sample_retract_dist: 3
samples_tolerance: 0.15 #0.05
samples: 4 #5
samples_result: median
trigger_to_bottom_z: 2.0733
# todo, include in nudge dict, only use -1, 1 to enable or disable probing functionality. with the dict probe offset being defined always from T0

#  Change this path to somewhere in your config folder
[save_variables]
filename: ~/printer_data/config/toolchanger/toolchanger.variables