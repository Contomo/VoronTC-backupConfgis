#pragma once

#ðŸŸ¨ toolchanger related settings to edit. â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€#
[toolchanger]
on_axis_not_homed: home # home|abort
initialize_on: manual   # manual|first-use|homing
uses_axis: xyz # just ensures that these axis are homed before toolchanges. for liftbar, maybe change this?

# params_*: 
  # Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via
  # `toolchanger.params_name`.
  # Also will be copied to any tools for this toolchanger with local
  # values overriding. 

params_safe_y: 210  # safe distance when changing (moving up and down)
params_close_y: 25  # safe distance to tools without tool attatched

params_fast_speed: 32000
params_path_speed: 2500   

# â”€â”€â”€ update your pickup paths based on the changer you have! default right now is SC
params_dropoff_path: [{'z':3.5, 'y':4, 'f':3.0}, {'z':2, 'y':1, 'f':2.0}, {'z':1, 'y':0, 'f':1.0}, {'z':0, 'y':0, 'f':0.8}, {'z':-12, 'y':0, 'f':3}]
params_pickup_path: [{'z':-12, 'y':2, 'f':3.0}, {'z':-10, 'y':0, 'f':2.0},{'z':-5, 'y':0, 'f':1.0}, {'z':1, 'y':0, 'f':0.5, 'verify':1}, {'z':2, 'y':2, 'f':0.5}, {'z':3, 'y':5, 'f':2}]


#ðŸŸ¨ Tool Probe Crash handling â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€#
[tool_probe_endstop]
  crash_mintime: 0.1
  crash_gcode:
    RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.' 
    RESPOND TYPE=error MSG='position on fail: {printer.gcode_move.position}' 
    #M84
    PAUSE_BASE
    #TURN_OFF_HEATERS
    G91
    G0 E-2
    G90
    _auto_continue_retry CHECK_INTERVAL=0.1 # interval how often to check if present now, an then auto continue.

[gcode_macro TOOL_PROBE_CRASH_RESUME]
gcode:
    RESPOND MSG='Tool probe crash recovered, continuing.'
    START_TOOL_PROBE_CRASH_DETECTION T={printer.toolchanger.tool_number}
    G91
    G0 E2
    G90
    RESUME_BASE

#ðŸŸ¨â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€#
#ðŸŸ¨ main settings to edit. 
#ðŸŸ¨â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€#
[gcode_macro _toolchanger_settings]
#
variable_t_command_restore_axis:            'XYZ'
#
# disable those to silence console spam
variable_debug_messages:                    True
variable_warning_messages:                  True
variable_valid_messages:                    True

#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€> Homing related settings <â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# use this to quieten down moves during macros. 
# Moves that dont require speed will be quieter that way.
# comment or set to 1 to disable. (divide by 1 is the same)
variable_macro_accel_divider:               8
#
# basic meaning, for z probing the tap probe will
# require heat. (calibration probe will always heat regardless)
variable_use_tap_requires_temperature: False
#

# very experimental! how do i describe this....?
# if more than that amount tools are calibrated at once,and all tools are fairly close in change (0.25, 0.26, 0.3, 0.28) for the probe offset,
# it is assumed that rather than all tool probes being off by that amount, the trigger to bottom Z of your probe is off by that amount.
# min_tools = min tools when this does its thing        ||| max_variation = in percent, between probe values
# MAD = median absolute deviation, filtering at mad_k Ã— MAD ||| max_drift = max allowable adjustment range.
#variable_ttbz_drift_autoadjust:        {'min_tools': 3, 'weight_history': 0.3, 'max_drift': 0.4, 'mad_k': 0.3}
#
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€> Save variable file settings <â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
variable_svf:                          {'auto_repair': 'Always', 'remove_invalid': True, 'max_offs': 2.5}
# valid options are: Startup|Use|Always (comment the variable to disable)
variable_svf_auto_repair:              'Always'
#
# will automatically remove invalid entries or structures inside the gcode offset variables.
# (will print whats removed if something is, and its value)
variable_svf_remove_invalid:            True
#
# â”€â”€â”€ Offset loading â”€â”€â”€
# This is just a safety measure.
# will clamp offsets to those in case something overtly big was put in ;)
variable_max_allowed_offsets:           2.5
#

variable_clean_nozzle_macro:            {'macro': 'CLEAN_NOZZLE', 'x_pos_var': 'x', 'y_pos_var': 'y', 'z_pos_var': 'z'}
#
#
# if defined, the regular QGL will call your macro instead of the inbuilt one. make sure you actually call the _QUAD_GANTRY_LEVEL then.
variable_user_qgl_macro:                'FINE_COARSE_QUAD_GANTRY_LEVEL'
#
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€> Change/Drop Failure handling <â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# speed and accel division for handling failures.
variable_tc_failure:                    {'speed_divider': 4, 'accel_divider': 8}
#
# These values merely represent the button colors in mainsail
# by button colors i mean the small dot inside the buttons.
variable_toolchange_failure_color:          "ff0000"  # Red â€” failure
variable_toolchange_pickup_color:           "ff66cc"  # Pink â€” pickup
variable_toolchange_dropoff_color:          "00ffff"  # Cyan â€” dropoff
variable_toolchange_active_color:           "ffffff"  # White â€” active





#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€> Offset/calibration settings <â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# â”€â”€â”€ Logging/Analysis/data collection â”€â”€â”€
# comment to disable. Will save this many calibration results to a rolling storage variable inside the svf.
# note that T0 represents your sensors location in this storage, its merely a representation of homing/sensor position.
#
# to read out stats call: 'TC_OFFSET_STATS'
variable_offset_history:               {'max_entries': 10, 'rounding': 5}
#
# rounding              ||| rounding used when saving the gcode offsets to the regular offset dicts.
# probe_calibration     ||| to run probe z trigger calibration with your calibration runs
# save_on_failure_delay ||| automatically saves (if for some reason probing macro fails -> exceeds sample tolerance, trigger before move etc...)
variable_offset_calibration:          { 'value_rounding': 4,        'save_on_failure_delay': 120,
                                        'probe_calibration': True,  'probe_extra_params': 'SAMPLE_RETRACT_DIST=5' }
#
gcode:#dont delete
#todo do mode coarse for first run.
# Coarse
# lower_z: 0.7
# spread: 7
# samples: 3
# sample_retract_dist: 5

[tools_calibrate]
pin: ^PG11
spread: 5 #3 #7
lower_z: 0.4 #0.4 #0.4 #0.2 #0.5
travel_speed: 100 #20
speed: 2.5 #1.5
lift_speed: 4 #8
final_lift_z: 4 #6
sample_retract_dist: 5
samples_tolerance: 0.15 #0.05
samples_tolerance_retries: 3
samples: 3 #6 #5
samples_result: median
trigger_to_bottom_z: 1.7838 #2.0325 # 2.1325
# todo, include in nudge dick, only use -1, 1 to enable or disable probing functionality. with the dict probe offset being defined always from T0

#  Change this path to somewhere in your config folder
[save_variables]
filename: ~/printer_data/config/toolchanger/variables.cfg





# ðŸŸ©â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€#
#                          TOOL PROBE CALIBRATION SETTINGS                      #
# ðŸŸ©â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€#
#[tools_calibrate]
#
#pin: GPIO pin (e.g., '^PG11')
#     The pin Klipper will monitor to detect a probe trigger.
#     - depending on probe may require inversion (ie: !PG11)
#     - normally closed: nudge (no inversion)
#     - normally open: sexball [microswitch type] (no inversion)
#
#spread:               (mm)
#    X/Y distance from center for probing sequence
#    This defines how far the tool moves during the touch pattern.
#    - For large pins (â‰¥5mm), use 3.5-4.0 
#    - Larger values = more overtravel, takes longer, safer for larger variance in tools or larger pins
#    - Smaller values = less overtravel but may hit too early for large variance tools/large pins
#    - Example: a 5mm pin, a 2.5mm spread would touch the pins face. (assuming nozzle = cylinder with 0 width)
#
#lower_z:              (mm)
#   Distance to lower the nozzle to hit. (0 -> slides over | 3-4 -> hits silicone sock)
#   - 0.1-0.2 = minimal travel, may work, usually cleaner nozzle around here
#   - 0.4-0.5 = safer hit margin, possibly less accurate.
#
#travel_speed:         (mm/s)
#   Move speed between probes 
#   - 0.1-infinity (really doesnt matter that much)
#
#speed:                (mm/s)
#   move speed during probes 
#   - too slow -> takes forever | too fast -> not accurate enough
#   - 0.5-10 would be an avreage/sane range
#
#lift_speed:           (mm/s)
#   speed with which to raise Z
#
#final_lift_z:         (mm)
#   Distance to raise Z between/after probing.
#   Will also the the distance its waiting above the probe.
#
#sample_retract_dist:  (mm)
#   Z retract between samples (Z) 
#   - too little -> backlash/doesnt untrigger | too much -> moves up too high/takes longer.
#   - 0.2-5 
#
#samples: 
#    Number of probe samples to take (usually 3-5)
#
#samples_tolerance:    (mm) 
#     Max variance allowed between samples (will retry/abort if exceeded)
#     a good probe will work with 0.05, altho increasing it has no effect on results.
#     more a "sanity check" then anything else.
#
#samples_tolerance_retries: 
#     the amount of times to retry the probing when the sample tolerance has been exceeded.
#
#samples_result:       ['median' | 'average']
#     output result method 
#     
#trigger_to_bottom_z:  (mm)
#    Used in trigger calibration calculations.
#    Defines Z distance from calibration probe *trigger* to mechanical bottom out.
#    sort of like the distance from when your keyboard key registers a hit, to where it actually hits the bottom.
#    - 0-3 best calibrated by setting it to 0, 
#      running TOOL_CALIBRATE_PROBE_OFFSET and substracting the result from your current probe offset.
#    - decrease if the nozzle is too high, increase if too low.
#
#probe: probe 
#     (optional name of the nozzle probe to use)
#
#     Get accurate value using 'TC_FIND_PROBE_TRIGGER_TO_BOTTOM'.
#
# ðŸŸ©â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€#