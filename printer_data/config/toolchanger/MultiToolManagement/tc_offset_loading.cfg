#
# This file is dedicated to loading your tool offsets from a save variables file.
# if you have them somewhere else, replace this to load them appropriately
#
#################################################################################################################
# TC_LOAD_OFFSETS ######################################################################################
#################################################################################################################
[gcode_macro TC_LOAD_OFFSETS]
variable_macro_html: "?tLoads offsets from [save_variables], may try to fall back to tool.gcode_?_offset.?nClamps each axis to ±max_off ($mo$).?nProvide tool number as first param. Will use active tool if not provided.?pTC_LOAD_OFFSETS "
description: "Loads offsets from save_variables. Clamps each axis to ±max_off. provide tool as first param, will use active if possible if not provided."
gcode:
    {% set p = printer %}
    {% set tcs = p['gcode_macro _toolchanger_settings'] %}
    {% set msg = macro_html|replace('$mo$', tcs.get('max_allowed_offsets', 'None')|string) %}
    {% set global_z_offset = p['gcode_macro TX'].global_z_offset|default(0)|float|round(3) %}
    {% set svf = p.save_variables.variables %}
    {% set actn = p.tool_probe_endstop.active_tool_number|int %} 
    {% set ns = namespace(tn="") %}
    {% set raw = [] %}
    {% set offsets = "" %}
    # -----------------------------------------------------
    # Get toolnumber from first parameter
    # -----------------------------------------------------
    {% if rawparams %} {% for c in rawparams.split()[0] %} {% set ns.tn = ns.tn ~ c if "0" <= c <= "9" else ns.tn %} {% endfor %} # {% set n = ''.join
        {% if ns.tn|length > 0 %} {% set tool_name = p.toolchanger.tool_names[ns.tn|int] if ns.tn|int <= p.toolchanger.tool_names|length %} # if parameter provided
        {% else %} {% set msg = msg ~ "?s4?mFirst parameter provided but did not contain a ?ctoolnumber?c" %} {% endif %}
    {% elif actn != -1 %} {% set tool_name = p.toolchanger.tool_names[actn] %} {% endif %} # else if active tool => active tool
    # -----------------------------------------------------
    # get the offsets
    # -----------------------------------------------------
    {% if tool_name %} # 
        {% set t = p[tool_name] %}
        {% set svf_key = 'offsets_' ~ tool_name|replace('tool ', '', 1)|lower %}
        {% if svf_key in svf %}
            {% set offsets = svf.get(svf_key, {}) %}
            {% set msg = msg ~ "?s0?tX: " ~ offsets.x ~ " | Y: " ~ offsets.y ~ " | Z: " ~ offsets.z ~ " | Global-Z: " ~ global_z_offset ~ "?mSet offsets for?c" ~ tool_name ~ "?c from the ?csvf?c" %}
        # ------------------------------------------------------
        # fall back to tools gcode offsets if svf makes issues.
        # ------------------------------------------------------
        {% elif (t.gcode_x_offset != 0.0 or t.gcode_y_offset != 0.0 or t.gcode_z_offset != 0.0) and svf_key not in svf %}
            {% set offsets = {"x": t.gcode_x_offset|float,"y": t.gcode_y_offset|float,"z": t.gcode_z_offset|float} %}
            {% set msg = msg ~ "?s1?tX: " ~ offsets.x ~ " | Y: " ~ offsets.y ~ " | Z: " ~ offsets.z ~ " | Global-Z: " ~ global_z_offset ~ "?mFallback tool offsets for " ~ tool_name ~ " used!" %}
        {% endif %}
        # check if we okay
        {% if 'x' not in offsets or 'y' not in offsets or 'z' not in offsets %}
            {% set msg = msg ~ "?s4?tRun _INIT_SVF_KEYS to create/repair the missing keys in your SVF?mNo offsets set! Missing the key for " ~ tool_name|replace('tool ', '', 1) ~ " in ?c[save_variables]?c or ?cgcode_?_offset?c fallbacks avalible" %}
        {% else %}
            # ------------------------------------------------------------
            # clamp the offsets if they are for some reason out of bounds.
            # ------------------------------------------------------------
            {% set max_off = tcs.get('max_allowed_offsets', 999) %}
            {% set clamped_x = -max_off|float if offsets.x < -max_off|float else (max_off|float if offsets.x > max_off|float else offsets.x|round(3)) %}
            {% set clamped_y = -max_off|float if offsets.y < -max_off|float else (max_off|float if offsets.y > max_off|float else offsets.y|round(3)) %}
            {% set clamped_z = -max_off|float if offsets.z < -max_off|float else (max_off|float if offsets.z > max_off|float else offsets.z|round(3)) %}
            {% if clamped_x != offsets.x|round(3) or clamped_y != offsets.y|round(3) or clamped_z != offsets.z|round(3) %}
                {% set msg = msg ~ "?s3?tX: " ~ clamped_x ~ " | Y: " ~ clamped_y ~ " | Z: " ~ clamped_z ~ "?mYour offsets were clamped!" %}{% endif %}
            {% if "0" not in tool_name and clamped_x == 0 and clamped_y == 0 and clamped_z == 0 %}
                {% set msg = msg ~ "?s3?t(Offsets all zero for non-T0 tool)?mVerify your offsets! ?c(all 0)?c" %}{% endif %}

            # Apply the offsets now.
            SET_GCODE_OFFSET X={clamped_x} Y={clamped_y} Z={clamped_z - global_z_offset} MOVE=0
        {% endif %}
    {% else %}
      {% set msg = msg ~ "?s3?tFirst parameter provided should contain toolnumber, valid examples would be:?nABC=1?nTN=2?nT=T1?nTOOL='tool TX1'?nT=3?netc....?mFirst parameter missing ?ctoolnum?c and no ?cactive_tool?c" %}
    {% endif %}
    {% if params.SILENT is not defined %}
        _UNIFIED_RESPOND MSG="{msg}"
    {% endif %}
