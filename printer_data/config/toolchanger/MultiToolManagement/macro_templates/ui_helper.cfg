[gcode_macro _ui_helper_macros]
gcode:
    # ╭───────────── settings ─────────────╮
    {%- set _nav_color_map = {
        'back':  'success',
        'close': 'error',
    } -%}
    {%- set _button_color_map = {
        'active_alpha':  0.8,
        'default_alpha': 0.4,
        'disabled_alpha': 0.2,
    } -%}
    # ╰────────────────────────────────────╯

    # ╭───────────── locals ─────────────╮
    {% set _buffer = [] %}
    {% set _ui = namespace( 
        buffer_mode = False, 
        last_added = none 
    )%}
    # ╰──────────────────────────────────╯

    # ╭─────────────────────────────── main UI ───────────────────────────────╮
    {%- macro ui(txt, _force = none ) -%}
        {%- if (_ui.buffer_mode and _force != False) or _force == True -%}
            {% if txt|string|lower|trim == 'show' %}
                {%- set _ = buffer_flush() -%}
            {%- else -%}
                {%- set _ = _buffer.append('action:prompt_' ~ txt) -%}
            {%- endif -%}
        {%- else -%}
            {%- set _ = action_respond_info('action:prompt_' ~ txt) -%}
        {%- endif -%}
    {%- endmacro -%}

    {%- macro add(txt, _force=False) -%}
        {% if _ui.last_added != txt or _force %}
            {%- set _ui.last_added = txt -%}
            { ui(txt, False) }
            { ui('show', False) }
        {%- endif -%}
    {%- endmacro -%}

    {%- macro buffer_init(init=True) -%}
        {%- set _ui.buffer_mode = init -%}
    {%- endmacro -%}
        
    {%- macro buffer_flush() -%}
        {%- for line in _buffer if _buffer -%}
            {%- set _ = action_respond_info(line) -%}
        {%- endfor -%}
        {%- set _ = ui('show', False) if _buffer -%}
        {%- set _ = _buffer.clear() -%}
    {%- endmacro -%}
    # ╰───────────────────────────────────────────────────────────────────────╯

    {%- macro print_xyz(mapping) -%}
        {%- for key, value in mapping.items() if (key|trim)[0]|lower in ['x', 'y', 'z'] -%}
            {- key[0]|upper ~ ': ' ~ '%+.2f'|format(value) ~ ' mm'}{', ' if not loop.last else '' -}
        {%- else -%}
            {'n/A'}
        {%- endfor -%}
    {%- endmacro -%}

    {%- macro button() -%}

    {%- endmacro -%}


    {% macro _but_alpha(rgb, state=None) %}
        {% set s = rgb|string|lower|replace('rgba','rgb') %}
        {% set parts = s|replace('rgb','')|replace('(','')|replace(')','')|split(',')|map('trim')|list %}
        {% set base = parts[0] ~ ',' ~ parts[1] ~ ',' ~ parts[2] ~ ',' %}
        {% set a = _button_color_map['default_alpha'] %}
        {% if state is sameas(true) %}
            {% set a = _button_color_map['active_alpha'] %}
        {% elif state is sameas(false) %}
            {% set a = _button_color_map['disabled_alpha'] %}
        {% endif %}
        { 'rgba(' ~ base ~ a ~ ')' }
    {% endmacro %}


    {% macro wrap(t, every=12) %}
        {% set s = [] %}
        {% for i in range(0, t|length, every) %}
            {% set _ = s.append(t[i:i+every]) %}
        {% endfor %}
        { s|join('\u200B') }
    {% endmacro %}


    # ╭───────────────────────────────────────── nav buttons ─────────────────────────────────────────╮
    {%- macro back(command) -%}  {ui('[↻]|' ~ command ~ '|' ~ _nav_color_map['back'])}{%- endmacro -%}
    {%- macro close(command) -%} {ui('[X]|' ~ command ~ '|' ~ _nav_color_map['close'])}{%- endmacro -%}
    # ╰───────────────────────────────────────────────────────────────────────────────────────────────╯


    # ╭──────────────────────── special text ───────────────────────╮
    {% macro box_text(t) %}
        {% set w = t|length %}
        {% set top = '╭' ~ '─'*w ~ '╮' %}
        {% set mid = '│' ~   t   ~ '│' %}
        {% set bot = '╰' ~ '─'*w ~ '╯' %}
        {text_line(top)}{text_line(mid)}{text_line(bot)}
    {% endmacro %}
    # ╰──────────────────────────────────────────────────────────────╯

    # ╭───────────── extra chars ─────────────╮
    {%- macro arrow(size = 's') -%}
        {% if   size == 'l' %}{''}
        {% elif size == 'm' %}{''}
        {% elif size == 's' %}{'→'}
        {% else %}{'invalid arrow size: ' ~ size ~ ', must be one of [s, m, l].'}
        {% endif %}
    {%- endmacro -%}
    # ╰──────────────────────────────────╯


