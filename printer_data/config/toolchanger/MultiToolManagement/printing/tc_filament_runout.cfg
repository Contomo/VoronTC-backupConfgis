[gcode_macro FILAMENT_RUNOUT]
gcode:
    {% import toolchanger_helper as tch with context %}
    #───< shorts
    {% set p, th      = printer, printer.toolhead %}
    

    {% set state      = state_map.get(params.ACTION) %}
    {% set tn         = params.T|int %}
    {% set tool       = p[tc.tool_names[tn]] %}
    #───< get settings from settings macro
    {% set tcs        = p['gcode_macro _toolchanger_settings'] %}

    #------------------------------------------------------------------------------------------------------------------

    #{% params.INSERT params.REMOVE %}

    #───< small helper macros with round

    {% set runout_key = tool.name|replace('tool ', '')|lower %}
    {% set states     = svf.get('runout_states', {}) %}
    {% set _ = states.setdefault(runout_key, {}).update({'state': state}) %}
    SAVE_VARIABLE VARIABLE=runout_states VALUE="{states}"

    #───< Save to macro for later checking.
    {% set _ = storage.update({runout_key: {'state': state, 'last': cur_time|round(r), 'last_sys': sys_time|round(r)}}) %}
    SET_GCODE_VARIABLE MACRO=FILAMENT_RUNOUT VARIABLE=storage VALUE="{storage}"

    {% if state %}
      _UNIFIED_RESPOND MSG="?t?pT0_Fil ?t?s0?mfilament inserted"
    {% else %}
      _UNIFIED_RESPOND MSG="?t?pT0_Fil ?t?s0?mfilament removed"
    {% endif %}
  


[gcode_macro T98]
description: will open the filament runout sensor selection.
gcode:



 {%- macro ui(txt) -%}{- action_respond_info("action:prompt_" ~ txt) -}{%- endmacro -%}
