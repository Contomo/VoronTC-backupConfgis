
[toolchanger]
initialize_gcode: # now accessed via "_INITIALIZE_TOOLCHANGER_INTERNAL"
    {% set atn = printer.tool_probe_endstop.active_tool_number|int %}
    {% for tool_name in printer.toolchanger.tool_names %}
      {% set tool = printer[tool_name] %}
      {% set tn = (tool_name|replace('tool ', ''))|int %}
      {% set a = 1 if tn == atn else 0 %}
      # ───| Set all inactive except active, remove color |─── 
      {% if "gcode_macro " ~ tn in printer %}
        SET_GCODE_VARIABLE MACRO={tn} VARIABLE=active VALUE={a}
        SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="''"
      {% endif %}
      # ───| disable all extruders |─── 
      {% if tool.extruder %}
        SET_STEPPER_ENABLE STEPPER={tool.extruder} ENABLE=0
      {% endif %}
    {% endfor %}
    #RESPOND MSG="<div style='margin-top: 8px;'><img src='https://tenor.com/view/yakui-yakui-the-maid-nijiura-maids-gif-22874678.gif' width='64' style='vertical-align:middle;' title='woozy'></div>"
    TC_LOAD_OFFSETS

# <───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────> #
# _INIT_AT_STARTUP ##############################################################################################
# <───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────> #
[delayed_gcode _INIT_AT_STARTUP]
initial_duration: 1
gcode:
    INITIALIZE_TOOLCHANGER START=True
    {% set svf_mode = printer['gcode_macro _toolchanger_settings'].get('svf_auto_repair', '') %}
    {% if svf_mode in ['Always', 'Startup'] %}
      _INIT_SVF_KEYS
    {% endif %}

# <───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────> #
#   INITIALIZE_TOOLCHANGER   ####################################################################################
# <───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────> #
[gcode_macro INITIALIZE_TOOLCHANGER]
rename_existing: _INITIALIZE_TOOLCHANGER_INTERNAL
gcode:
  DETECT_ACTIVE_TOOL_PROBE # todo add "detected tool" option?
  _INITIALIZE_FROM_DETECTED_TOOL {rawparams}

# <───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────> #
#   _INITIALIZE_FROM_DETECTED_TOOL   ############################################################################
# <───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────> #
[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
variable_macro_html: "?ttechnically its '_INITIALIZE_FROM_DETECTED_TOOL'?nCall 'INITIALIZE_TOOLCHANGER' to auto init toolchanger based on detected tool.?pINITIALIZE_TOOLCHANGER "
gcode:
  {% set msg = macro_html %}
  {% if printer.toolchanger.has_detection == True %} 
    {% set msg = msg ~ "?s5?t?mhElp! (use toolchanger.detected_tool_number?)" %}
    _UNIFIED_RESPOND MSG="{msg}"
  {% elif printer.tool_probe_endstop.active_tool_number|int == -1 %}
    {% set msg = msg ~ "?s4?t(use toolchanger.detected_tool_number?)?mNo active tool probe, not initilizing!" %}
    {% set msg = (msg ~ "?s0?t?mPerhaps you want to?c?cmd_RAISE_Z_A_BIT?cmd?c? ?ddd") if 'START' in rawparams else msg %}
    _UNIFIED_RESPOND MSG="{msg}"
  {% else %}
    {% set msg = msg ~ "?s0?t?mInitializing toolchanger with ?c" ~ printer.toolchanger.tool_names[printer.tool_probe_endstop.active_tool_number] ~ "?c" %}
    {% set msg = msg ~ " and parameters: ?c" ~ rawparams ~ "?c" if rawparams|length > 1 else msg %}
    SET_GCODE_VARIABLE MACRO="{(printer.toolchanger.tool_names[printer.tool_probe_endstop.active_tool_number])|replace('tool ', '')}" VARIABLE=color VALUE="'{printer['gcode_macro _toolchanger_settings'].toolchange_active_color}'"
    _UNIFIED_RESPOND MSG="{msg}"
    _INITIALIZE_TOOLCHANGER_INTERNAL T={printer.tool_probe_endstop.active_tool_number} {rawparams}
  {% endif %}



[gcode_macro _RAISE_Z_A_BIT]
description: "Raise Z by 5 mm (unsafe)"
variable_macro_html: "?tRaise Z by 5 mm…?p_RAISE_Z5 "
gcode:
  {% set cur_z = 0 if 'Z' not in printer.toolhead.homed_axes|upper else printer.toolhead.position.z %} 
  SET_KINEMATIC_POSITION Z={cur_z}
  G91
  G0 Z5 F1000
  G90
  INITIALIZE_TOOLCHANGER



#[gcode_macro DETECT_ACTIVE_TOOL_PROBE]
#rename_existing: _DETECT_ACTIVE_TOOL_PROBE_ORIGINAL
#description: Detect which tool is active by identifying a probe that is NOT triggered
#gcode:
#  _DETECT_ACTIVE_TOOL_PROBE_ORIGINAL{rawparams}
#  UPDATE_STATUS
#
#[gcode_macro UPDATE_STATUS]
#description: Update status of buttons/LEDs
#gcode:
#  {% set p = printer %}
#  {% set atn = p.tool_probe_endstop.active_tool_number|int %}
#  {% for tn in p.toolchanger.tool_numbers %}
#    {% set a = 1 if tn == atn else 0 %}
#      SET_GCODE_VARIABLE MACRO={'T' ~ tn} VARIABLE='active' VALUE={a}
#  {% endfor %}




[gcode_macro INTERACTIVE_CONSOLE_TEST]
description: "Test clickable console HTML elements"
gcode:
    {% set cmd = "G28" %}
    {% set custom_cmd = "_TC_CONFIG_SETTINGS" %}
    {% set color = "rgb(255, 0, 128)" %}

    {% set clickable1 = "<a class='command'>" ~ cmd ~ "</a>" %}
    {% set clickable2 = "<a class='command' style='color:" ~ color ~ "'>" ~ custom_cmd ~ "</a>" %}
    {% set spanlink = "<span style='color:" ~ color ~ "; text-decoration: underline; cursor: pointer;' title='Not clickable, just styled'>Fake Link</span>" %}
    {% set normal_a = "<a href='https://klipper3d.org/' style='color:lime'>Real URL</a>" %}
    {% set hover = "<span style='color:rgb(0,255,255)' title='You are hovering this'>Hover Me</span>" %}

    {% set ns = namespace(msg="") %}

    {% set line = "Test 1: Plain command link: " ~ clickable1 ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 2: Styled command link: " ~ clickable2 ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 3: Faux link (span): " ~ spanlink ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 4: External URL: " ~ normal_a ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 5: Hover tooltip: " ~ hover ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    RESPOND MSG="<div style='line-height: 1.4'>{ns.msg}</div>"