#########################################################################################
#    _TC_ADJUST_HOME_OFFSET    ##########################################################
#########################################################################################
[gcode_macro _TC_ADJUST_HOME_OFFSET]
description: Depending on the selected tool at the time of homing, the physical Z endstop position is offset. This corrects for that using current tool offset.
variable_macro_html: "?tCorrects for the missing gcode offset at the time of probing (homing z).?nDrives to Z10 and setting kinematic position to Z(10 + probe + z offset)?p_TC_ADJUST_HOME_OFFSET "
variable_storage: {} 
gcode:
  # ── variables alias ─────────────────────
  {% set msg = macro_html %}
  {% set p = printer %}
  {% set tc = p.toolchanger %}
  {% set svf_settings = p['gcode_macro _toolchanger_settings'].get('svf', {}) %}
  {% set svf = p.save_variables.variables %}

  {% set actn = printer.tool_probe_endstop.active_tool_number|int %}
  {% set actn_z = printer.tool_probe_endstop.active_tool_probe_z_offset|float %}

  # ── regular stuffs ─────────────────────
  {% set tn = tc.tool_number|int %}
  {% set tool = p[tc.tool_names[actn]] %} # -> the object: 'tool T1'

  # ── svf stuffs ─────────────────────
  {% set t_name = tool.name|replace('tool ', '', 1)|lower %} # -> 't1'
  {% set key = 'offsets_' ~ t_name %}
  {% set offsets_tool = svf.get(key, {}) %}
  {% set msg = msg ~ "?tSVF key " ~ key ~ " not found.?s2?mSVF key not found, trying fallback" if key not in svf else msg %}
  {% set probe_offset = offsets_tool.get('probe', 0)|float %}
  {% set z_offset = offsets_tool.get('z', 0)|float %}

  
  {% if tn != actn %} 
    _UNIFIED_RESPOND MSG="{macro_html ~ '?ttoolchangers tool (' ~ tn ~ ') is not the currently detected tool. (' ~ actn ~ ') ?s3?mDesynced? doing quick reinit'}"
    INITIALIZE_TOOLCHANGER
  {% endif %}

  {% if actn != -1 %}
    # ── decide ───────────────────── (fall back to default)
    {% set z_offset = tool.gcode_z_offset if z_offset == 0 else z_offset %}
    {% set probe_offset = actn_z if probe_offset == 0 else probe_offset %}

    # ── check/warn if gcode z is 0 ───────────────────── 
    {% if "0" not in tool.name and z_offset == 0 %}
      {% set msg = msg ~ "?s3?tgcode z offset for " ~ tn ~ " appears to be 0, although it is not T0.?mPlease verify your offsets!" %}
    {% endif %}
    # ── check/warn if probe z is 0 ───────────────────── 
    {% if probe_offset == 0 %}
      {% set msg = msg ~ "?tProbe offset is 0. Defaulting to -1.4 as a safety measure.?s4?mProbe offset is ?c0?c!" %}
      {% set probe_offset = -1.400 %}
    {% endif %}
    # ── total calc + sanity check ───────────────────── 
    {% set total_offset = (z_offset|float + probe_offset|float)|round(4) %}
    {% if total_offset|abs > svf_settings.get('max_offs', 999) * 2 %}
      {% set msg = msg ~ "?s5?tCalculated total offset (" ~ total_offset ~ "mm) seems unusual. Please check tool offsets.?m" %}
    {% endif %}
    # ────────────────────────────────── ─────────── 
    {% set msg = msg ~ "?tapplied " ~ tool.name|replace('tool ', '', 1) ~ " offsets: " ~ total_offset ~ "mm (z: " ~ z_offset|float|round(2) ~ " + probe_z: " ~ probe_offset|float|round(2) ~ ")" %}
    {% set msg = msg ~ "?s0?mHome shifted by: ?c" ~ total_offset ~ "mm?c" %}

    # ── offset application ───────────────────── 
    G90
    G0 Z10 F1000
    M400
    SET_KINEMATIC_POSITION Z={10.0 + total_offset}
    SET_GCODE_VARIABLE MACRO=_TC_ADJUST_HOME_OFFSET VARIABLE=storage VALUE="{{'tool': actn, 'gcode': z_offset, 'probe': probe_offset, 'total': total_offset}}"
  {% else %}
    {% set msg = "?tERROR: No tool found. Run DETECT_ACTIVE_TOOL_PROBE to fix this.?s3?mCouldnt adjust home, no active tool probe." %}
  {% endif %}
  
  _UNIFIED_RESPOND MSG="{msg}"


[exclude_object]

      








      