
[gcode_macro CLEAN_NOZZLE]
description: "Cleans the nozzle of the specified or active tool. Usage: CLEAN_NOZZLE [TEMP|S=<temp>] [T=<tool>] "
#--- main settings
variable_brush_center_x:  328 # brush centre X  (mm)
variable_brush_center_y:  0   # brush centre Y  (mm)
variable_brush_height_z:  5.5 # Z height you want to move through the bristles
variable_wipe_dist:       32  # The total length (X-axis)
variable_wipe_width:      8   # The total width (Y-axis)
#-- misc settings
variable_brush_plunge:    1   # z plunge depth to lower at center of "8"
variable_safe_above:      5   # mm above brush we can safely move/start/end
variable_wipe_times:      4   # Number of full figure-8 cycles to perform
variable_wipe_speed:      200 # mm/s
variable_min_temp:        190 # Â°C
gcode:
    {% import toolchanger_helper as tc_helper with context %}

    {% set p, th = printer, printer.toolhead %}
    {% set tcs, fast_speed = p['gcode_macro _toolchanger_settings'], p.toolchanger.params_fast_speed %}
    {% set actn = p.tool_probe_endstop.active_tool_number|int %}
    {% set tn = params.T|default(actn)|int %}
    {% set cx, cy, z0, dz = brush_center_x|float, brush_center_y|float, brush_height_z|float, brush_plunge|float %}

    {tc_helper.check_ok()}
    
    {% if tn == -1 %}{action_raise_error("CLEAN_NOZZLE: No tool specified and no tool is active.")}{% endif %}

    {% if p.idle_timeout.state|lower != "printing" and tcs.get('macro_accel_divider') %}
        {tc_helper.divide_vel(accel_divide=tcs.get('macro_accel_divider', 1)|float(1))}
    {% endif %}

    {% set requested = params.TEMP|default(params.S)|default(0) %}
    {% set target_temp = [(requested|float if requested else tc_helper.get_tool_target(tn)|float - 30)|float, min_temp]|max %}

    {% set half_x  = wipe_dist  / 2.0 %}
    {% set half_y  = wipe_width / 2.0 %}
    {% set fillet  = ([half_x, half_y]|min) * 0.50 %}
    {% set half_x = half_x - fillet %}
    {% set half_y = half_y - fillet %}

    {% set path_pts = [
        [-half_x,    0,        0  ],
        [-half_x/2,  half_y,   0  ],
        [ 0,         0,        dz ], 
        [ half_x/2,  half_y,   0  ],
        [ half_x,    0,        0  ],
        [ half_x/2, -half_y,   0  ],
        [ 0,         0,        dz ],
        [-half_x/2, -half_y,   0  ],
        [-half_x,    0,        0  ],
    ] %}

    G90
    {% if tn != actn %} 
        # ---< restore to brush
        T{tn} X={cx + path_pts[0][0]} Y={cy + path_pts[0][1]} Z={z0 + path_pts[0][2]}
    {% else %} 
        # ---< or, move to brush
        M104 T{tn} S{target_temp} 

        ROUNDED_G0 Z={z0 + safe_above}         F={fast_speed} D=10
        ROUNDED_G0 X={cx + path_pts[0][0]}     F={fast_speed} D=100
        ROUNDED_G0 Y={cy + path_pts[0][1]}     F={fast_speed} D=10
        ROUNDED_G0 Z={z0 + path_pts[0][2]}     F={fast_speed} D=0
    {% endif %}

    # ---< wait final heat
    M109 T{tn} S{target_temp} 

    # ---< move the 8
    {% for pass in range(wipe_times) %}
        {% for p in path_pts %}
            {% set x = [[cx + p[0], th.axis_maximum.x-0.5]|min, th.axis_minimum.x+0.5]|max %}
            {% set y = [[cy + p[1], th.axis_maximum.y-0.5]|min, th.axis_minimum.y+0.5]|max %}
            ROUNDED_G0 X={x} Y={y} Z={z0 + p[2]} F={wipe_speed|float * 60} D={fillet if not loop.last else 0}
        {% endfor %}
    {% endfor %}

    # ---< safe height, restore temp and accel.
    M104 T{tn} S{tc_helper.get_tool_target(tn)} 
    G0 Z{z0 + safe_above}
    {tc_helper.restore_vel()}
    
  


#    {% set half_x = wipe_dist / 2.0 %}
#    {% set half_y = wipe_width / 2.0 %}
#    {% set fillet = [half_x, half_y]|min * 0.5 %}
#    
#    {% for i in range(wipe_times) %}
#        # Define the points of the figure-8 path. D is non-zero for the corners.
#        ROUNDED_G0 X={x - half_x} Y={y + half_y} F={wipe_speed} D={fillet_d}
#        ROUNDED_G0 X={x + half_x} Y={y - half_y} F={wipe_speed} D={fillet_d * 2}
#        ROUNDED_G0 X={x - half_x} Y={y - half_y} F={wipe_speed} D={fillet_d * 2}
#        ROUNDED_G0 X={x + half_x} Y={y + half_y} F={wipe_speed} D={fillet_d * 2}
#        ROUNDED_G0 X={x}          Y={y}          F={wipe_speed} D={fillet_d}
#    {% endfor %}
#    ROUNDED_G0 D=0
