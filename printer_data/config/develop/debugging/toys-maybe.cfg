[gcode_macro _check_kinematic_limits]
gcode:
  {% set toolhead = printer.toolhead %}
  {% if params.X and (params.X|float < toolhead.axis_minimum.x or
                      params.X|float > toolhead.axis_maximum.x) %}
    {action_raise_error("X[%.3f] must be between %.3f and %.3f."
                        | format(params.X|float, toolhead.axis_minimum.x,
                                 toolhead.axis_maximum.x))}
  {% elif params.Y and (params.Y|float < toolhead.axis_minimum.y or
                        params.Y|float > toolhead.axis_maximum.y) %}
    {action_raise_error("Y[%.3f] must be between %.3f and %.3f."
                        | format(params.Y|float, toolhead.axis_minimum.y,
                                 toolhead.axis_maximum.y))}
  {% elif params.Z and (params.Z|float < toolhead.axis_minimum.z or
                        params.Z|float > toolhead.axis_maximum.z) %}
    {action_raise_error("Z[%.3f] must be between %.3f and %.3f."
                        | format(params.Z|float, toolhead.axis_minimum.z,
                                 toolhead.axis_maximum.z))}
  {% elif params.E and (params.E|float|abs > printer.configfile.settings[
                          "extruder"].max_extrude_only_distance) %}
    {action_raise_error("E[%.4f] exceeds max_extrude_only_distance[%.4f]."
       | format(params.E|float|abs, printer.configfile.settings[
                                      "extruder"].max_extrude_only_distance))}
  {% endif %}




[gcode_macro _PATH_SUBDIVISION]
description: ""
variable_input: []
variable_output: []
variable_default_subdiv: 1.0
gcode:
  {% set subdivision = [0.2, params.D|default(default_subdiv)|float]|max %}
  # ───| Input decision  |─── #
  {% set paths = params.INPUT|default(input) %}
  # ───| Clear Buffers  |─── #
  SET_GCODE_VARIABLE MACRO="_PATH_SUBDIVISION" VARIABLE="output" VALUE="{[]}"
  SET_GCODE_VARIABLE MACRO="_PATH_SUBDIVISION" VARIABLE="input" VALUE="{[]}"

  #|────────────────────────────────────────────────────────────────────────────────────────|#
  {% set subdivided = [] %}
  {% for path in paths %} # ───| Subdivide Path  |─── #
    {% set new_path = [] %}
    {% for i in range(path|length - 1) %}
      {% set cur = path[i] %}
      {% set nxt = path[i + 1] %}
      {% set _ = new_path.append(cur) %}
      {% set ns = namespace(max_dist=0) %}
      {% for key in cur %}
        {% if key in nxt and cur[key]|float is number and nxt[key]|float is number %}
          {% set d = (nxt[key]|float - cur[key]|float)|abs %}
          {% set ns.max_dist = d if d > ns.max_dist else ns.max_dist %}
        {% endif %}
      {% endfor %}
      {% set steps = (ns.max_dist / subdivision|float)|round(0, 'ceil')|int %}
      {% if steps > 1 %}
        {% for s in range(1, steps) %}
          {% set mid = {} %}
          {% for key in cur %}
            {% if key in nxt and cur[key]|float is number and nxt[key]|float is number %}
              {% set val = cur[key]|float + (nxt[key]|float - cur[key]|float) * (s / steps) %}
              {% set _ = mid.update({key: val}) %}
            {% endif %}
          {% endfor %}
          {% set _ = new_path.append(mid) %}
        {% endfor %}
      {% endif %}
    {% endfor %}
    {% set _ = new_path.append(path[-1]) %}
    {% set _ = subdivided.append(new_path) %}
  {% endfor %}
  {% set paths = subdivided %}

  # ───| Output decision  |─── #
  {% if params.OUTPUT is defined %}
    SET_GCODE_VARIABLE MACRO="{params.OUTPUT}" VARIABLE="input" VALUE="{paths}"
  {% else %}
    SET_GCODE_VARIABLE MACRO="_PATH_SUBDIVISION" VARIABLE="output" VALUE="{paths}"
  {% endif %}







[gcode_macro INTERACTIVE_CONSOLE_TEST]
description: "Test clickable console HTML elements"
gcode:
    {% set cmd = "G28" %}
    {% set custom_cmd = "_TC_CONFIG_SETTINGS" %}
    {% set color = "rgb(255, 0, 128)" %}

    {% set clickable1 = "<a class='command'>" ~ cmd ~ "</a>" %}
    {% set clickable2 = "<a class='command' style='color:" ~ color ~ "'>" ~ custom_cmd ~ "</a>" %}
    {% set spanlink = "<span style='color:" ~ color ~ "; text-decoration: underline; cursor: pointer;' title='Not clickable, just styled'>Fake Link</span>" %}
    {% set normal_a = "<a href='https://klipper3d.org/' style='color:lime'>Real URL</a>" %}
    {% set hover = "<span style='color:rgb(0,255,255)' title='You are hovering this'>Hover Me</span>" %}

    {% set ns = namespace(msg="") %}

    {% set line = "Test 1: Plain command link: " ~ clickable1 ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 2: Styled command link: " ~ clickable2 ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 3: Faux link (span): " ~ spanlink ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 4: External URL: " ~ normal_a ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    {% set line = "Test 5: Hover tooltip: " ~ hover ~ "<br>" %}
    {% set ns.msg = ns.msg ~ line %}

    RESPOND MSG="<div style='line-height: 1.4'>{ns.msg}</div>"

[gcode_macro TEST_SCRIPT_INJECTION]
description: "Attempts to inject <script> tag into console — for testing"
gcode:
    {% set ns = namespace(msg="") %}

    {% set ns.msg = ns.msg ~ "<div><strong>Script Injection Test</strong></div>" %}
    {% set ns.msg = ns.msg ~ "<br><code>&lt;script&gt;alert('hi')&lt;/script&gt;</code> (escaped)<br>" %}
    {% set ns.msg = ns.msg ~ "<br><span>Unescaped attempt below (if not stripped):</span>" %}
    {% set ns.msg = ns.msg ~ "<br><script>alert('This should not run')</script>" %}
    {% set ns.msg = ns.msg ~ "<br><script>document.body.style.backgroundColor = 'rgb(255,0,0)'</script>" %}
    {% set ns.msg = ns.msg ~ "<br><script>console.log('SCRIPT TEST')</script>" %}

    RESPOND MSG="{ns.msg}"


[gcode_macro IMG]
gcode:
    {% set ns = namespace(msg="") %}
    {% set width=params.WIDTH|string %}
    #{% set image = "<img src='https://tenor.com/view/yakui-yakui-the-maid-nijiura-maids-gif-22874678.gif' title='woozy'>" %}
    {% set image = "<img src='https://tenor.com/view/yakui-yakui-the-maid-nijiura-maids-gif-22874678.gif' width='" ~ width ~ "' style='vertical-align:middle;' title='woozy'>" %}
    {% set tweak = "<img src='https://cdn.discordapp.com/attachments/1265167588900601938/1298543388827713546/rapidsave.com_pz9d6vwas1wd1.gif?ex=67e3a7c5&is=67e25645&hm=9d89f734392c2e455d17da182671881ca535793b18f6b9e4555a652de251e4ed&.gif' width='" ~ width ~ "' style='vertical-align:middle;' title='woozy'>" %}
    #{% set img = params.IMG|string|lower %}
    {% set ns.msg = ns.msg ~ "<div style='margin-top: 8px;'>" ~ tweak ~ "</div>" %}
    RESPOND MSG="{ns.msg}"

[gcode_macro BUT]
gcode:
    RESPOND MSG="<button data-v-3cfcc6d8='' type='button' class='btn-collapsible v-btn v-btn--icon v-btn--round theme--dark v-size--default'><span class='v-btn__content'><span data-v-3cfcc6d8='' aria-hidden='true' class='v-icon notranslate theme--dark'><svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' role='img' aria-hidden='true' class='v-icon__svg'><path d='M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z'></path></svg></span></span></button>"

[gcode_macro SHOW_COLOR_SWATCHES]
description: "Displays styled Vuetify color swatches with labels, tooltips, and layout tricks"
gcode:
    {% set symbol = "■" %}
    {% set shades = ["darken-4", "darken-3", "darken-2", "darken-1", "", "lighten-1", "lighten-2", "lighten-3", "lighten-4", "lighten-5"] %}
    {% set bases = ["primary", "secondary", "accent", "info", "success", "error", "warning"] %}

    {% for base in bases %}
        {% set ns = namespace(row="") %}

        {% for shade in shades %}
            {% if shade == "" %}
                {% set cls = base + "--text" %}
                {% set title = "base" %}
            {% else %}
                {% set cls = base + "--text text--" + shade %}
                {% set title = shade %}
            {% endif %}
            {% set ns.row = ns.row + "<span title='" + title + "' class='" + cls + "'>" + symbol + "</span> " %}
        {% endfor %}

        RESPOND MSG="<div style='display:flex; align-items:center; gap:8px;'>{ns.row}<span class='white--text' style='min-width:80px'>{base}</span> 🎨</div>"
    {% endfor %}


[gcode_macro SHOW_HUE_GRID]
gcode:
    {% set symbol = "█" %} # ■■ ■
    {% set rows = 18 %}
    {% set cols = 72 %}
    {% set ns = namespace(output="") %}
    {% for row in range(rows) %}
        {% set l = 1 - row / (rows - 1) %}
        {% set s = 1 %}
        {% set row_ns = namespace(line="") %}
        ##############################################griddy widdy
        {% for col in range(cols) %}
            {% set h = col / cols %}

            {% if l < 0.5 %}
                {% set q = l * (1 + s) %}
            {% else %}
                {% set q = l + s - l * s %}
            {% endif %}
            {% set p = 2 * l - q %}

            {% set tr = h + 1/3 %}
            {% set tg = h %}
            {% set tb = h - 1/3 %}
            ###############################################HUE TO RGB
            ##################### R
            {% if tr < 0 %}{% set tr = tr + 1 %}{% endif %}
            {% if tr > 1 %}{% set tr = tr - 1 %}{% endif %}
            {% if tr < 1/6 %}
                {% set r = p + (q - p) * 6 * tr %}
            {% elif tr < 1/2 %}
                {% set r = q %}
            {% elif tr < 2/3 %}
                {% set r = p + (q - p) * (2/3 - tr) * 6 %}
            {% else %}
                {% set r = p %}
            {% endif %}
            ##################### G
            {% if tg < 0 %}{% set tg = tg + 1 %}{% endif %}
            {% if tg > 1 %}{% set tg = tg - 1 %}{% endif %}
            {% if tg < 1/6 %}
                {% set g = p + (q - p) * 6 * tg %}
            {% elif tg < 1/2 %}
                {% set g = q %}
            {% elif tg < 2/3 %}
                {% set g = p + (q - p) * (2/3 - tg) * 6 %}
            {% else %}
                {% set g = p %}
            {% endif %}
            ##################### B
            {% if tb < 0 %}{% set tb = tb + 1 %}{% endif %}
            {% if tb > 1 %}{% set tb = tb - 1 %}{% endif %}
            {% if tb < 1/6 %}
                {% set b = p + (q - p) * 6 * tb %}
            {% elif tb < 1/2 %}
                {% set b = q %}
            {% elif tb < 2/3 %}
                {% set b = p + (q - p) * (2/3 - tb) * 6 %}
            {% else %}
                {% set b = p %}
            {% endif %}
            ###############################################HUE TO RGB

            {% set r255 = (r * 255)|int %}
            {% set g255 = (g * 255)|int %}
            {% set b255 = (b * 255)|int %}
            {% set color = "rgb(" + r255|string + "," + g255|string + "," + b255|string + ")" %}
            {% set span = "<span style='display:inline-block; width:8px; text-align:center; color:" + color + "' title='" + color + "'>" + symbol + "</span>" %}
            {% set row_ns.line = row_ns.line + span %}
        {% endfor %}

        {% set ns.output = ns.output + row_ns.line + "<br>" %} #brick it
    {% endfor %}

    RESPOND MSG="{ns.output}"




[gcode_macro TC_DEBUG_VIZ]
description: "HTML UI Test"
gcode:
    RESPOND MSG="<div style='display:inline-block; background:rgb(255,10,100); border-radius:6px; padding:6px;'><a class='command'><img src='https://tenor.com/view/yakui-yakui-the-maid-nijiura-maids-gif-22874678.gif' width='100' /></a></div>"
    #RESPOND MSG='</div><div class="os-content" style="padding: 0px; height: 100%; width: 100%;"></div><div data-v-1a32e3ab="" class="col console-message text--disabled" style="min-width: 0px;">action:prompt_end</div>'
    RESPOND MSG="</div></div> <!-- pretend to close console -->"
    RESPOND MSG="<div class='v-card theme--dark' style='background:#111; padding:10px; border:2px solid hotpink; border-radius:10px;'>"
    RESPOND MSG="<h3 style='color:#f0f; margin-top:0;'>💡 Injected Panel</h3>"
    RESPOND MSG="<a class='command' style='background:#0ff; color:#000; padding:6px 12px; display:inline-block; border-radius:4px;'>G28</a>"
    RESPOND MSG="<img src='https://tenor.com/view/yakui-yakui-the-maid-nijiura-maids-gif-22874678.gif' width='120' style='display:block; margin-top:10px; border-radius:6px;' />"
    RESPOND MSG="</div>"
    RESPOND MSG="<div class='consoleTable mini'><div class='row pa-0 ma-0'><div class='text-center py-3 col'>⬇️ Console resumes below ⬇️</div></div></div>"